/*---------------------------------------------------------\
|     From: Ekobots Innovation Ltda - www.ekobots.com      |
|       by: Lauro Sirgado and Juan Sirgado y Antico        |
|                   www.jsya.com.br                        |
|----------------------------------------------------------|
|         Program HelixWindMill Part II - 2015/05/28        |
|                All rights reserved 2015                  |
|                Revision V1.000                           |
|---------------------------------------------------------*/


// Parameters of HelixWindMill - Parametrized HelixWindMill
// Small wind collector model customizable.
// Part I - Rotor (for stator (fix axe) use a pole inserted on the blades shaft)

// source of  data:

// http://en.wikipedia.org/wiki/Vertical_axis_wind_turbine
// http://en.wikipedia.org/wiki/Windmill
// http://en.wikipedia.org/wiki/Georges_Jean_Marie_Darrieus
// http://en.wikipedia.org/wiki/Darrieus_wind_turbine
// for future versions:
// http://en.wikipedia.org/wiki/Inductrack


//Caution this model is very dangerous for children, see below

//Warning: Small parts kill children if aspirated, see below

// This model is not a toy, it is inappropriate for children, the
// parts are small and fragile, very easy to be broken and can cause
// fatal injuries if aspirated by children. Please look into:
// http://en.wikipedia.org/wiki/Toy_safety
// http://en.wikipedia.org/wiki/Home_Safety_Council

//---------------------------------------------------------|

// Helix Windmill - Small wind collector.

// All parameters

/* [Helix Wind Mill] */

//01 - Print option Windmill/Cable support/Pole base
print_type=1; //[0:Rotor, 1:Cable support, 2:Stator(base)]
//02 - Scale factor of piece
ScaleXYZ=0.5; //[0.2: 0.1: 1.0]
//03 - Type of blade shape symetrical/asymetrical/sym.segmented
type=1; //[0:symetrical, 1:asymetrical, , 2:sym.segmented]
//04 - Total number of blades, #
numberBlades=03; //[1: 0: 200]
//05 - Height of blades, mm
heightWindmill=160; //[10: 1: 400]
//06 - Total angle of blades twist, degree
totalangleWindmill=160; //[100: 1: 720]
//07 - Distance around z axe of blade disk, mm (negative values cross axe)
df_translateXBlades=15; //[-7: 1: 23]
//08 - Distance around z axe of blade disk, mm (negative values cross axe)
df_translateYBlades=15; //[-7: 1: 23]

/* [Heated Bed] */

//09 - Heated Bed length, mm
df_lengthheatedBed=210; // [100: 1: 600]
//10 - Heated Bed width, mm
df_widthheatedBed=210; // [100: 1: 600]

/* [WindMill - Advanced] */

//11 - Distance around z axe of blade, mm (negative values cross axe)
df_translateXOneBlade=8; //[-12: 1: 47]
//12 - Distance around z axe of blade, mm (negative values cross axe)
df_translateYOneBlade=8; //[-12: 1: 47]
//13 - Individual blade rotation, degrees
rotateOneBlade=145; //[10: 1: 400]
//14 - Segments of symetrical segmented_wing, # (type sym.segmented)
holosegmentsBlade=16; // [16: 1: 32]

/* [Advanced - Caution or crash run] */

//15 - Number of extruded slices, #
slicesNum=20; //[20: 1: 200]
//16 - Number of object faces, #
S_fn=50; //[20: 1: 200]

/* [Hidden] */

pit=1; //[1]
refthicknessRing=13; //[13]
heightratioBaseSupport=0.167; //[0.167]
heightratioTopSupport=0.835; //[0.835]
translateXBlades=-(df_translateXBlades-43); //[20: 1: 50]
translateYBlades=-(df_translateYBlades-43); //[20: 1: 50]
translateXOneBlade=(53-df_translateXOneBlade); //[41: 1: 100]
translateYOneBlade=(53-df_translateYOneBlade); //[41: 1: 100]
refdiameterSupports= ((translateXOneBlade-2*refthicknessRing)<=16)?16:(translateXOneBlade-2*refthicknessRing); //[?]
df_ScaleX = ScaleXYZ;
df_ScaleY = ScaleXYZ;
df_ScaleZ = ScaleXYZ;
echo("refdiameterSupports", refdiameterSupports);

//---------------------------------------------------------|
// import shapes section
//---------------------------------------------------------|

// symetrical wing shape
module symwingShapeBladeFilledFile()
{
//include <SymWingShapeBladeFilled.scad>;
symwingShapeBladeFilled_Source();
}

module symwingShapeBlade()
{
//include <SymWingShapeBlade.scad>;
symwingShapeBlade_Source();
}

// asymetrical wing shape
module asywingShapeBladeFilledFile()
{
//include <AsyWingShapeBladeFilled.scad>;
asywingShapeBladeFilled_Source();
}

module asywingShapeBlade()
{
//include <AsyWingShapeBlade.scad>;
asywingShapeBlade_Source();
}

// rotor disk shape
module RotorDiskShape()
{
//include <RotorDiskShape.scad>;
RotorDiskShape_Source();
}

module RotorDiskShapeFilledFile()
{
//include <RotorDiskShapeFilled.scad>;
RotorDiskShapeFilled_Source();
}


//----------------------------------------------------|
//Modules call section
//----------------------------------------------------|

*scale([df_ScaleX, df_ScaleY, df_ScaleZ])
{
urnBlades();
supportsTopDiskPlate();
supportsBaseDiskPlate();
supportsStatorDiskPlate();
}

%heatedBed();
difference()
{

Output_type(print_type); //print_type

color("red", 1.0) //only for visual check
translate([0, 0, -1.0])
cube([210, 210, 2], center=true);

*color("red", 1.0) //only for visual check
translate([0, -105.0, 105.0])
cube([210, 210, 260], center=true);

}

//----------------------------------------------------|
//Modules library section
//----------------------------------------------------|

module Output_type(print_type)
{
	if (print_type == 00) {
		scale([df_ScaleX, df_ScaleY, df_ScaleZ])
        translate([0, 0, 3.206])
        {
        urnBlades();
        supportsBaseDiskPlate();
        }
	} else if (print_type == 01) {
		scale([df_ScaleX, df_ScaleY, df_ScaleZ])
        translate([0, 0, 5.659-heightWindmill*0.835])
        {
        supportsTopDiskPlate();
        }
    } else if (print_type == 02) {
		scale([df_ScaleX, df_ScaleY, df_ScaleZ])
        translate([0, 0, 10.104])
        {
        supportsStatorDiskPlate();
        }
        } else {
        translate([0, 0, 150])
        rotate([90, 0, 0])
        color("Blue", 1.0)
		text(text="Error try again", size=7, font="Lucida Console", direction="ttb");
	}
}

//---------------------------------------------------------|

module heatedBed()
{
for (i=[0: 10: 200])
{
    for (j=[0: 10: 200])
    {
    color("brown", 0.1)
    translate([i-200/2, j-200/2, -2/2])
        {
        square([9, 9], center=true);
        }
    }
}
}

//---------------------------------------------------------|

module urnBlades()
{
difference()
{
for ( i = [0: 1/numberBlades: 1] )
{
    rotate( i * 360, [0, 0, 1])
    toparmsRingSupport();
    rotate( i * 360, [0, 0, 1])
    translate([-translateXBlades, -translateYBlades, 0])
    color("gold", 1.0)
    {
    branchBlade();
    branchBladeEnds();   
    }
};
    translate([0, 0, (heightWindmill)/2])
    color("cyan", 1.0)
    cylinder(h=heightWindmill+pit, r1=6, r2=6, center=true, $fn = S_fn);
}
}

//---------------------------------------------------------|

module branchBlade()
{
translate([0, 0, 0])
rotate([0, 0, 0])
scale([1,1,1])
{
{
linear_extrude(height = heightWindmill, center = false, convexity = 10, twist = totalangleWindmill, slices = slicesNum, $fn=S_fn)
{
translate([translateXOneBlade, translateYOneBlade, 0])
rotate([0, 0, rotateOneBlade])
{
    if (type == 0) {
		symwingShapeBlade();
	} else if (type == 1) {
		asywingShapeBlade();
    } else if (type == 2) {
        holowingCrBlade();
	} else {
        translate([0, 0, 150])
        rotate([90, 0, 0])
        color("Blue", 1.0)
		text(text="Error try again", size=7, font="Lucida Console", direction="ttb");
	}
}
}
}
}
}

//---------------------------------------------------------|

module branchBladeEnds()
{
translate([+translateXOneBlade, +translateYOneBlade, 0])
rotate([0, 0, rotateOneBlade])   
{
    if (type == 0) {
		symwingShapeBladeEnds();
	} else if (type == 1) {
		asywingShapeBladeEnds();
    } else if (type == 2) {
        holowingCrBladeEnds();
	} else {
        translate([0, 0, 150])
        rotate([90, 0, 0])
        color("Blue", 1.0)
		text(text="Error try again", size=7, font="Lucida Console", direction="ttb");
	}
}
rotate([0, 0, -totalangleWindmill])
translate([+translateXOneBlade, +translateYOneBlade, heightWindmill])
rotate([0, 0, rotateOneBlade])
{
    if (type == 0) {
		symwingShapeBladeEnds();
	} else if (type == 1) {
		asywingShapeBladeEnds();
    } else if (type == 2) {
        holowingCrBladeEnds();
	} else {
        translate([0, 0, 150])
        rotate([90, 0, 0])
        color("Blue", 1.0)
		text(text="Error try again", size=7, font="Lucida Console", direction="ttb");
	}
}
}

//---------------------------------------------------------|

module symwingShapeBladeEnds()
{
translate([0, 0, 0])
rotate([0, 0, 0])
{
linear_extrude(height = 2.0, center = false, convexity = 10, twist = 0.0, slices = 10, scale=[0, 0], $fn=S_fn)
{
translate([0, 0, 0])
rotate([0, 0, 0])
scale([1,1,1])
symwingShapeBladeFilledFile();
}
}
}

//---------------------------------------------------------|

module asywingShapeBladeEnds()
{
translate([0, 0, 0])
rotate([0, 0, 0])
{
linear_extrude(height = 2.0, center = false, convexity = 10, twist = 0.0, slices = 10, scale=[0, 0], $fn=S_fn)
{
translate([0, 0, 0])
rotate([0, 0, 0])
scale([1,1,1])
asywingShapeBladeFilledFile();
}
}
}

//---------------------------------------------------------|

module supportsTopDiskPlate()
{
// top disk plate
union()
{   
translate([0, 0, heightWindmill*0.835])
difference()
    {
    color("lightgreen", 1.0)
    rotate_extrude(center = true, convexity = 10, slices = slicesNum, $fn=S_fn)
    {
    scale([0.8, 1.3, 1])
    translate([25, 0, 4.5])
    rotate([0, 0, 90])
    {
    symwingShapeBlade();
    rotate([0, 0, 180])
    symwingShapeBlade();
    }
    };
    for ( i = [0: 1/numberBlades: 1] )
    {
    rotate( i * 360, [0, 0, 1])
    rotate([0, 90, rotateOneBlade*0.95])
    color("red", 1.0)
    translate([0, 0, translateYOneBlade])
    cylinder(h=2*translateYOneBlade, r1=3, r2=3, center=true, $fn = S_fn);
    };
    }
};
}

//---------------------------------------------------------|

module toparmsRingSupport()
{
// Top Ring Support arms (spheres with wires)
{
translate([-translateXBlades*0.835, -translateYBlades*0.835, 0])
rotate([0, 0, -totalangleWindmill*0.835])
translate([+translateXOneBlade, +translateYOneBlade, heightWindmill*0.835])
rotate([0, 0, rotateOneBlade])
{
    difference()
    {
    color("lightgreen", 1.0)
    sphere(r=8, center=true, $fn = S_fn);
    translate([0, +translateYOneBlade, 0])
    rotate([90, 0, 0])
    color("red", 1.0)
    cylinder(h=3*translateYOneBlade, r1=3, r2=3, center=true, $fn = S_fn);
    }
}
}
}

//---------------------------------------------------------|

module supportsBaseDiskPlate()
{
// base disk plate (rotor)
translate([0, 0, heightWindmill*0])
union()
{
rotate([0, 0, 0])
color("gold", 1.0)
rotate_extrude(center = true, convexity = 10, slices = slicesNum, $fn=S_fn)
{
scale([1, 0.7, 1])
translate([refdiameterSupports, 0, 4.5])
rotate([0, 0, 90])
{
mirror([1, 0, 0])
RotorDiskShape();
}
}
rotate([0, 0, 0])
color("gold", 1.0)
rotate_extrude(center = true, convexity = 10, slices = slicesNum, $fn=S_fn)
{
scale([1, 0.7, 1])
translate([refdiameterSupports+12, 0, 4.5])
rotate([0, 0, 90])
{
mirror([1, 0, 0])
RotorDiskShape();
}
}
// central column (rotor)
translate([0, 0, (heightWindmill*0.835+8)/2])
difference()
{
    color("cyan", 1.0)
    cylinder(h=heightWindmill*0.835+8, r1=10, r2=8.5, center=true, $fn = S_fn);
    color("cyan", 1.0)
    cylinder(h=heightWindmill+pit, r1=6, r2=6, center=true, $fn = S_fn);
}
// top of column (rotor)
translate([0, 0, (+heightWindmill*0.835+8.0)])
difference()
{
    color("cyan", 1.0)
    sphere(r=8.5, center=true, $fn = S_fn);
    translate([0, 0, -4])
    color("red", 0.5)
    cylinder(h=20+pit, r1=10, r2=0, center=true, $fn = S_fn);
}
};
// base support arms (rotor)
translate([0, 0, heightWindmill*0])
for ( i = [0: 1/3: 1])
{
    rotate( i * 360, [0, 0, 1])
    translate([-5, -5, 3.1])
    color("gold", 1.0)
    {  
{
rotate([-90, 90, 0])
linear_extrude(height = refdiameterSupports+refthicknessRing, center = false, convexity = 10, twist = 0, slices = slicesNum, $fn=S_fn)
{
scale([0.4, 0.6, 1])
translate([3, 17, 0])
{
symwingShapeBlade();
rotate([0, 0, 180])
symwingShapeBlade();
}
}
}
}
}
}

//---------------------------------------------------------|

module supportsStatorDiskPlate()
{
union()
{
// stator base plate
translate([0, 0, -6.9])
color("gold", 1.0)
rotate_extrude(center = true, convexity = 10, slices = slicesNum, $fn=S_fn)
{
scale([1, 0.7, 1])
translate([refdiameterSupports+9.5, 0, 4.5])
rotate([0, 0, 90])
{
mirror([1, 0, 0])
RotorDiskShape();
}
}
// central column
translate([0, 0, (heightWindmill*0.835+8)/2])
union()
{
translate([0, 0, -20/2])
difference()
{
    color("blue", 1.0)
    cylinder(h=heightWindmill*0.835+8, r1=5, r2=4.5, center=true, $fn = S_fn);
    color("blue", 1.0)
    cylinder(h=heightWindmill+pit, r1=3, r2=3, center=true, $fn = S_fn);
}
translate([0, 0, (heightWindmill*0.835+8)/2-2])
difference()
{
    color("blue", 1.0)
    cylinder(h=20+pit, r1=4.6, r2=0, center=true, $fn = S_fn);
    translate([0, 0, -6])
    color("blue", 1.0)
    cylinder(h=20+pit, r1=4.5, r2=0, center=true, $fn = S_fn);
}
}
}
}


//---------------------------------------------------------|

// symetrical segmented_wing shape
module holowingCrBlade()
{
translate([0, 0, 0])
rotate([0, 0, 0])
scale([1,1,1])
{
for (i=[0: 1/holosegmentsBlade: 1])
{
translate([i*30, 0, 0])
difference()
{
offset(r = 2*i, $fn=30)
circle (r=2*i+2,center = true);
offset(r = 2*i, $fn=30)
circle (r=2*i+3/2,center = true);
};
}
}
}

//---------------------------------------------------------|

module holowingCrBladeEnds()
{
translate([0, 0, 0])
rotate([0, 0, 0])
{
linear_extrude(height = 2.0, center = false, convexity = 10, twist = 0.0, slices = 10, scale=[0, 00], $fn=S_fn)
{
{
translate([0, 0, 0])
rotate([0, 0, 0])
scale([1,1,1])
{
for (i=[0: 1/holosegmentsBlade: 1])
{
translate([i*30, 0, 0])
difference()
{
offset(r = 2*i, $fn=30)
circle (r=2*i+2,center = true);
};
}
}
}
}
}
}

//---------------------------------------------------------|
// end of library section
//---------------------------------------------------------|

// shapes section
//---------------------------------------------------------|

// module AsyWingShapeBlade.scad
module asywingShapeBlade_Source()
{
// Module names are of the form poly_<inkscape-path-id>().  As a result,
// you can associate a polygon in this OpenSCAD program with the corresponding
// SVG element in the Inkscape document by looking for the XML element with
// the attribute id="inkscape-path-id".

// fudge value is used to ensure that subtracted solids are a tad taller
// in the z dimension than the polygon being subtracted from.  This helps
// keep the resulting .stl file manifold.
fudge = 0.1;

module poly_path4138(h)
{
  scale([25.4/90, -25.4/90, 1]) union()
  {
    linear_extrude(height=h)
      polygon([[-6.011448,152.744466],[-8.090736,151.543464],[-9.942584,150.110077],[-11.637460,148.333689],[-13.245832,146.103684],[-14.838168,143.309447],[-16.484938,139.840360],[-18.256608,135.585808],[-20.223648,130.435176],[-21.796087,125.928935],[-23.222820,121.271288],[-24.518061,116.394857],[-25.696027,111.232262],[-26.770930,105.716125],[-27.756987,99.779068],[-29.519418,86.372676],[-30.065540,79.046663],[-30.314286,69.882540],[-30.288476,59.515019],[-30.010930,48.578814],[-29.504469,37.708639],[-28.791911,27.539207],[-27.896078,18.705232],[-26.839788,11.841426],[-25.797757,5.859002],[-24.734808,-1.283574],[-23.612487,-8.563847],[-22.427728,-14.877324],[-20.117458,-26.127324],[-18.952523,-31.476936],[-17.669778,-36.439824],[-14.980908,-46.283574],[-12.756938,-54.252324],[-10.639448,-61.283574],[-9.592908,-64.538458],[-8.783968,-66.439824],[-7.765387,-68.891976],[-6.214808,-73.471074],[-1.678025,-86.858473],[0.251821,-92.024210],[1.377732,-94.564824],[2.194573,-96.328498],[3.235522,-99.252324],[5.340977,-104.913228],[8.188992,-111.192724],[8.753682,-112.806418],[8.988552,-114.400154],[9.344648,-115.950471],[10.200792,-117.459754],[11.409151,-119.606617],[12.612042,-122.689824],[13.823112,-126.164432],[15.051102,-129.252324],[17.263265,-134.491254],[20.725632,-143.314824],[22.826689,-148.621673],[24.261926,-151.925252],[25.219710,-153.618930],[25.578423,-153.984983],[25.888412,-154.096074],[26.114333,-153.958313],[26.325315,-153.544379],[26.702663,-151.884104],[27.020857,-149.107467],[27.280297,-145.206688],[27.624523,-134.001573],[27.738552,-118.206504],[27.857727,-106.259593],[28.182212,-91.741939],[28.662450,-76.487044],[29.248882,-62.328404],[29.779305,-47.819211],[30.130707,-30.930128],[30.307547,-12.720475],[30.314286,5.750429],[30.155383,23.423266],[29.835298,39.238715],[29.358491,52.137458],[28.729422,61.060176],[26.738092,79.810176],[25.656723,88.772091],[24.445552,97.153926],[22.514942,109.810176],[21.564374,116.446197],[20.620968,121.790886],[19.504967,126.743009],[18.036612,132.201336],[16.075125,138.377036],[15.249945,140.484196],[14.675522,141.529456],[13.969650,142.695614],[13.676052,144.095856],[13.396806,145.018936],[12.636483,146.373948],[11.511205,147.978624],[10.137092,149.650696],[8.120721,151.762852],[6.405830,153.022551],[4.505789,153.689097],[1.933972,154.021796],[-0.351385,154.096074],[-2.398138,153.914258],[-4.265191,153.466878],[-6.011448,152.744466]]);
  }
}

difference()
{
{
projection(cut=false)
scale([0.35, 0.35, 1])
poly_path4138(1);
};
translate([0, 0, 0])
{
projection(cut=false)
scale([0.35*0.9, 0.35*0.9, 1])
poly_path4138(1);
};
}
}
// end of AsyWingShapeBlade.scad
//---------------------------------------------------------|

// module AsyWingShapeBladeFilled.scad
module asywingShapeBladeFilled_Source()
{

// Module names are of the form poly_<inkscape-path-id>().  As a result,
// you can associate a polygon in this OpenSCAD program with the corresponding
// SVG element in the Inkscape document by looking for the XML element with
// the attribute id="inkscape-path-id".

// fudge value is used to ensure that subtracted solids are a tad taller
// in the z dimension than the polygon being subtracted from.  This helps
// keep the resulting .stl file manifold.
fudge = 0.1;

module poly_path4138(h)
{
  scale([25.4/90, -25.4/90, 1]) union()
  {
    linear_extrude(height=h)
      polygon([[-6.011448,152.744466],[-8.090736,151.543464],[-9.942584,150.110077],[-11.637460,148.333689],[-13.245832,146.103684],[-14.838168,143.309447],[-16.484938,139.840360],[-18.256608,135.585808],[-20.223648,130.435176],[-21.796087,125.928935],[-23.222820,121.271288],[-24.518061,116.394857],[-25.696027,111.232262],[-26.770930,105.716125],[-27.756987,99.779068],[-29.519418,86.372676],[-30.065540,79.046663],[-30.314286,69.882540],[-30.288476,59.515019],[-30.010930,48.578814],[-29.504469,37.708639],[-28.791911,27.539207],[-27.896078,18.705232],[-26.839788,11.841426],[-25.797757,5.859002],[-24.734808,-1.283574],[-23.612487,-8.563847],[-22.427728,-14.877324],[-20.117458,-26.127324],[-18.952523,-31.476936],[-17.669778,-36.439824],[-14.980908,-46.283574],[-12.756938,-54.252324],[-10.639448,-61.283574],[-9.592908,-64.538458],[-8.783968,-66.439824],[-7.765387,-68.891976],[-6.214808,-73.471074],[-1.678025,-86.858473],[0.251821,-92.024210],[1.377732,-94.564824],[2.194573,-96.328498],[3.235522,-99.252324],[5.340977,-104.913228],[8.188992,-111.192724],[8.753682,-112.806418],[8.988552,-114.400154],[9.344648,-115.950471],[10.200792,-117.459754],[11.409151,-119.606617],[12.612042,-122.689824],[13.823112,-126.164432],[15.051102,-129.252324],[17.263265,-134.491254],[20.725632,-143.314824],[22.826689,-148.621673],[24.261926,-151.925252],[25.219710,-153.618930],[25.578423,-153.984983],[25.888412,-154.096074],[26.114333,-153.958313],[26.325315,-153.544379],[26.702663,-151.884104],[27.020857,-149.107467],[27.280297,-145.206688],[27.624523,-134.001573],[27.738552,-118.206504],[27.857727,-106.259593],[28.182212,-91.741939],[28.662450,-76.487044],[29.248882,-62.328404],[29.779305,-47.819211],[30.130707,-30.930128],[30.307547,-12.720475],[30.314286,5.750429],[30.155383,23.423266],[29.835298,39.238715],[29.358491,52.137458],[28.729422,61.060176],[26.738092,79.810176],[25.656723,88.772091],[24.445552,97.153926],[22.514942,109.810176],[21.564374,116.446197],[20.620968,121.790886],[19.504967,126.743009],[18.036612,132.201336],[16.075125,138.377036],[15.249945,140.484196],[14.675522,141.529456],[13.969650,142.695614],[13.676052,144.095856],[13.396806,145.018936],[12.636483,146.373948],[11.511205,147.978624],[10.137092,149.650696],[8.120721,151.762852],[6.405830,153.022551],[4.505789,153.689097],[1.933972,154.021796],[-0.351385,154.096074],[-2.398138,153.914258],[-4.265191,153.466878],[-6.011448,152.744466]]);
  }
}

projection(cut=false)
scale([0.35, 0.35, 1])
poly_path4138(1);

}
// end of AsyWingShapeBladeFilled.scad
//---------------------------------------------------------|

// module SymWingShapeBlade.scad
module symwingShapeBlade_Source()
{

// Module names are of the form poly_<inkscape-path-id>().  As a result,
// you can associate a polygon in this OpenSCAD program with the corresponding
// SVG element in the Inkscape document by looking for the XML element with
// the attribute id="inkscape-path-id".

// fudge value is used to ensure that subtracted solids are a tad taller
// in the z dimension than the polygon being subtracted from.  This helps
// keep the resulting .stl file manifold.
fudge = 0.1;

module poly_path4138(h)
{
  scale([25.4/90, -25.4/90, 1]) union()
  {
    linear_extrude(height=h)
      polygon([[-9.948115,149.688489],[-12.631119,148.640932],[-15.240857,147.380130],[-17.772217,145.912426],[-20.220086,144.244162],[-22.579350,142.381682],[-24.844899,140.331330],[-27.011617,138.099447],[-29.074394,135.692377],[-31.028116,133.116463],[-32.867670,130.378048],[-34.587944,127.483475],[-36.183825,124.439088],[-37.650201,121.251228],[-38.981958,117.926240],[-40.173983,114.470466],[-41.221165,110.890249],[-41.967361,107.409870],[-42.660844,102.940114],[-43.224215,98.056966],[-43.580075,93.336409],[-44.128685,82.555159],[-22.404445,-33.694841],[-6.906783,-116.209488],[-0.152815,-151.351091],[-0.000238,-150.966627],[0.342030,-149.557482],[1.555475,-143.870867],[5.816905,-122.464372],[19.429065,-51.038591],[41.470835,66.148909],[43.048150,74.741485],[43.881399,80.921967],[44.128685,86.395607],[43.948115,92.867659],[43.641437,97.360384],[43.135977,101.781054],[42.439111,106.098468],[41.558214,110.281427],[40.500661,114.298730],[39.273828,118.119179],[37.885091,121.711572],[36.341825,125.044709],[34.300220,128.758142],[32.073942,132.219687],[29.678236,135.421229],[27.128344,138.354653],[24.439510,141.011842],[21.626979,143.384682],[18.705993,145.465058],[15.691797,147.244853],[12.599634,148.715953],[9.444748,149.870242],[6.242382,150.699605],[3.007779,151.195926],[-0.243815,151.351091],[-3.497158,151.156983],[-6.737006,150.605488],[-9.948115,149.688489]]);
  }
}

difference()
{
{
projection(cut=false)
scale([0.35, 0.35, 1])
poly_path4138(1);
};
translate([0, 0, 0])
{
projection(cut=false)
scale([0.35*0.9, 0.35*0.9, 1])
poly_path4138(1);
};
}
}
// end of SymWingShapeBlade.scad
//---------------------------------------------------------|

// module SymWingShapeBladeFilled.scad
module symwingShapeBladeFilled_Source()
{

// Module names are of the form poly_<inkscape-path-id>().  As a result,
// you can associate a polygon in this OpenSCAD program with the corresponding
// SVG element in the Inkscape document by looking for the XML element with
// the attribute id="inkscape-path-id".

// fudge value is used to ensure that subtracted solids are a tad taller
// in the z dimension than the polygon being subtracted from.  This helps
// keep the resulting .stl file manifold.
fudge = 0.1;

module poly_path4138(h)
{
  scale([25.4/90, -25.4/90, 1]) union()
  {
    linear_extrude(height=h)
      polygon([[-9.948115,149.688489],[-12.631119,148.640932],[-15.240857,147.380130],[-17.772217,145.912426],[-20.220086,144.244162],[-22.579350,142.381682],[-24.844899,140.331330],[-27.011617,138.099447],[-29.074394,135.692377],[-31.028116,133.116463],[-32.867670,130.378048],[-34.587944,127.483475],[-36.183825,124.439088],[-37.650201,121.251228],[-38.981958,117.926240],[-40.173983,114.470466],[-41.221165,110.890249],[-41.967361,107.409870],[-42.660844,102.940114],[-43.224215,98.056966],[-43.580075,93.336409],[-44.128685,82.555159],[-22.404445,-33.694841],[-6.906783,-116.209488],[-0.152815,-151.351091],[-0.000238,-150.966627],[0.342030,-149.557482],[1.555475,-143.870867],[5.816905,-122.464372],[19.429065,-51.038591],[41.470835,66.148909],[43.048150,74.741485],[43.881399,80.921967],[44.128685,86.395607],[43.948115,92.867659],[43.641437,97.360384],[43.135977,101.781054],[42.439111,106.098468],[41.558214,110.281427],[40.500661,114.298730],[39.273828,118.119179],[37.885091,121.711572],[36.341825,125.044709],[34.300220,128.758142],[32.073942,132.219687],[29.678236,135.421229],[27.128344,138.354653],[24.439510,141.011842],[21.626979,143.384682],[18.705993,145.465058],[15.691797,147.244853],[12.599634,148.715953],[9.444748,149.870242],[6.242382,150.699605],[3.007779,151.195926],[-0.243815,151.351091],[-3.497158,151.156983],[-6.737006,150.605488],[-9.948115,149.688489]]);
  }
}

projection(cut=false)
scale([0.35, 0.35, 1])
poly_path4138(1);

}
// end of SymWingShapeBladeFilled.scad
//---------------------------------------------------------|

// module RotorDiskShape.scad
module RotorDiskShape_Source()
{

// Module names are of the form poly_<inkscape-path-id>().  As a result,
// you can associate a polygon in this OpenSCAD program with the corresponding
// SVG element in the Inkscape document by looking for the XML element with
// the attribute id="inkscape-path-id".

// fudge value is used to ensure that subtracted solids are a tad taller
// in the z dimension than the polygon being subtracted from.  This helps
// keep the resulting .stl file manifold.
fudge = 0.1;

module poly_path4138(h)
{
  scale([25.4/90, -25.4/90, 1]) union()
  {
    difference()
    {
       linear_extrude(height=h)
         polygon([[1.382081,238.861398],[-1.624026,238.253350],[-4.741356,237.292701],[-7.916403,236.008478],[-11.095664,234.429712],[-14.225632,232.585429],[-17.252804,230.504660],[-20.123674,228.216433],[-22.784739,225.749778],[-26.904423,221.304634],[-28.157645,219.709069],[-28.617919,218.834068],[-28.765868,218.286875],[-29.168700,217.583859],[-30.492919,216.072778],[-31.817138,214.503972],[-32.219970,213.738472],[-32.367919,213.114978],[-32.441894,212.625376],[-32.643311,212.224433],[-32.941407,211.953525],[-33.305419,211.854028],[-33.967530,211.577285],[-34.242919,210.911938],[-34.931396,208.819430],[-36.586669,205.111468],[-38.241941,201.203967],[-38.745482,199.644619],[-38.930419,198.631698],[-39.165744,197.394775],[-39.420469,196.947058],[-39.731519,196.697778],[-40.221478,195.682183],[-40.878780,193.214345],[-42.397691,185.609892],[-43.692798,177.260319],[-44.070347,173.861082],[-44.168649,171.541528],[-44.211252,170.082542],[-44.425101,168.535667],[-44.775454,167.085472],[-45.227569,165.916528],[-45.761513,164.287622],[-46.133269,161.968005],[-46.344644,159.174710],[-46.397448,156.124774],[-46.293487,153.035231],[-46.034572,150.123115],[-45.622510,147.605463],[-45.059109,145.699308],[-44.486352,144.076529],[-44.217406,142.643970],[-44.246800,141.339103],[-44.569059,140.099398],[-44.912298,137.442904],[-45.195395,131.923335],[-45.463749,115.520898],[-45.638550,97.304053],[-46.040459,84.765698],[-46.242590,80.504111],[-46.178594,77.323904],[-45.821857,74.868596],[-45.145769,72.781708],[-44.519944,71.038652],[-44.224995,69.546154],[-44.251581,68.205600],[-44.590359,66.918378],[-44.930058,65.538230],[-45.178106,63.527227],[-45.395999,58.229854],[-45.237526,52.260656],[-44.696179,46.854028],[-44.486801,44.874899],[-44.506654,43.110358],[-44.754386,41.577027],[-45.228649,40.291528],[-45.762188,38.662350],[-46.133592,36.342459],[-46.344681,33.548930],[-46.397275,30.498837],[-46.293195,27.409253],[-46.034260,24.497255],[-45.622291,21.979915],[-45.059109,20.074308],[-44.479588,18.436459],[-44.212771,17.001948],[-44.251935,15.689634],[-44.590359,14.418378],[-44.935910,13.012252],[-45.188628,10.967578],[-45.411705,5.643499],[-45.251871,-0.192041],[-44.701409,-5.177222],[-44.482117,-6.951473],[-44.496180,-8.570245],[-44.742107,-10.015943],[-45.218409,-11.270972],[-45.755790,-12.897595],[-46.130529,-15.214901],[-46.344334,-18.006198],[-46.398913,-21.054788],[-46.295972,-24.143979],[-46.037219,-27.057075],[-45.624362,-29.577381],[-45.059109,-31.488202],[-44.486352,-33.110975],[-44.217406,-34.543531],[-44.246800,-35.848397],[-44.569059,-37.088102],[-44.912298,-39.744596],[-45.195395,-45.264165],[-45.463749,-61.666602],[-45.638550,-79.883447],[-46.040459,-92.421802],[-46.242590,-96.683389],[-46.178594,-99.863596],[-45.821857,-102.318904],[-45.145769,-104.405792],[-44.519944,-106.148848],[-44.224995,-107.641346],[-44.251581,-108.981900],[-44.590359,-110.269122],[-44.930058,-111.649270],[-45.178106,-113.660273],[-45.395999,-118.957646],[-45.237526,-124.926844],[-44.696179,-130.333472],[-44.486801,-132.312601],[-44.506654,-134.077142],[-44.754386,-135.610473],[-45.228649,-136.895972],[-45.762188,-138.525150],[-46.133592,-140.845041],[-46.344681,-143.638571],[-46.397275,-146.688665],[-46.293195,-149.778249],[-46.034260,-152.690249],[-45.622291,-155.207592],[-45.059109,-157.113202],[-44.479588,-158.751045],[-44.212771,-160.185553],[-44.251935,-161.497866],[-44.590359,-162.769122],[-44.925264,-164.125206],[-45.169482,-166.102591],[-45.383126,-171.370406],[-45.225832,-177.470854],[-44.692139,-183.302222],[-44.490481,-185.488225],[-44.514809,-187.397778],[-44.764077,-189.017366],[-45.237239,-190.333472],[-45.767900,-191.965307],[-46.136753,-194.287400],[-46.345714,-197.082526],[-46.396695,-200.133457],[-46.291611,-203.222966],[-46.032376,-206.133828],[-45.620904,-208.648816],[-45.059109,-210.550702],[-44.479588,-212.188545],[-44.212771,-213.623054],[-44.251935,-214.935368],[-44.590359,-216.206621],[-44.935592,-217.517899],[-45.196875,-219.342653],[-45.460100,-224.079709],[-45.365052,-229.512035],[-44.896749,-234.733874],[-44.300559,-239.083472],[0.572011,-239.083472],[45.444581,-239.083472],[45.444581,-203.502239],[45.444581,-167.921002],[43.335201,-166.436602],[37.981301,-162.864622],[36.377596,-161.701055],[34.886191,-160.355125],[33.506645,-158.839754],[32.238513,-157.167864],[31.081351,-155.352378],[30.034716,-153.406218],[28.271254,-149.173568],[26.944576,-144.573291],[26.051136,-139.708768],[25.587384,-134.683377],[25.549773,-129.600498],[25.934752,-124.563511],[26.738774,-119.675794],[27.958291,-115.040727],[29.589753,-110.761689],[30.558855,-108.787986],[31.629613,-106.942059],[32.801583,-105.236828],[34.074322,-103.685217],[35.447385,-102.300147],[36.920331,-101.094541],[38.492714,-100.081322],[40.164091,-99.273412],[42.573646,-98.002605],[43.567725,-97.284550],[44.242891,-96.627172],[44.540923,-95.629298],[44.788115,-93.345049],[45.145061,-84.226690],[45.343892,-67.890619],[45.414771,-42.955362],[45.444571,9.266498],[43.335191,10.750898],[37.981291,14.322878],[35.622473,16.148471],[33.492215,18.413097],[31.596616,21.068319],[29.941778,24.065699],[28.533801,27.356799],[27.378784,30.893181],[26.482830,34.626408],[25.852037,38.508042],[25.492507,42.489645],[25.410340,46.522779],[25.611637,50.559008],[26.102496,54.549892],[26.889020,58.446995],[27.977309,62.201879],[29.373462,65.766106],[31.083581,69.091238],[32.150044,70.756633],[33.336551,72.335034],[35.941227,75.113244],[37.295159,76.254248],[38.640660,77.190649],[39.945614,77.893043],[41.177901,78.332028],[42.095992,78.702482],[43.005399,79.311998],[43.801117,80.075992],[44.378141,80.909878],[44.634924,82.110286],[44.867527,84.686198],[45.263736,94.088323],[45.573853,109.363825],[45.804961,130.760278],[46.387341,185.135278],[46.398913,190.596212],[46.139741,194.510278],[44.959801,202.010278],[44.041393,205.940452],[43.447327,207.618247],[42.855421,208.807148],[42.050543,210.296898],[41.935870,210.750085],[42.048351,210.916528],[42.135912,211.057358],[42.058306,211.457693],[41.480919,212.903932],[39.150740,217.448087],[36.231059,222.421907],[34.916795,224.405228],[33.895121,225.698308],[30.318113,229.304881],[27.381949,231.988274],[24.836613,233.960849],[22.432091,235.434968],[20.323790,236.399605],[17.870405,237.242855],[15.169770,237.948792],[12.319720,238.501490],[9.418091,238.885026],[6.562716,239.083472],[3.851431,239.080905],[1.382071,238.861398]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[10.053951,234.689798],[13.569581,234.108708],[13.569581,227.325248],[13.569581,220.541788],[7.284791,217.732768],[0.999991,214.923748],[-4.668339,217.450478],[-10.336669,219.977208],[-10.614029,225.163408],[-10.717382,228.183742],[-10.633620,229.168658],[-10.408645,229.910193],[-10.004264,230.488433],[-9.382287,230.983469],[-7.332779,232.044278],[-5.055803,233.054089],[-2.879850,233.858999],[-0.769213,234.464442],[1.311814,234.875850],[3.398937,235.098657],[5.527864,235.138295],[7.734300,235.000198],[10.053951,234.689798]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[19.973771,231.154638],[21.245821,230.324145],[22.846182,229.021553],[26.523591,225.521275],[29.989500,221.696206],[31.325486,219.987625],[32.227411,218.588748],[32.729233,217.480903],[32.761465,216.720883],[32.264495,216.136197],[31.178711,215.554358],[29.840964,215.188999],[28.209198,215.331519],[25.944020,216.057563],[22.706041,217.442778],[16.382081,220.310198],[16.382081,226.394618],[16.533454,230.691730],[16.697306,231.998929],[16.897391,232.479028],[18.013639,232.089987],[19.973771,231.154638]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-14.555419,224.195018],[-14.664631,222.106332],[-14.894092,221.369670],[-15.322743,220.750470],[-16.012546,220.182990],[-17.025467,219.601485],[-20.268519,218.133428],[-23.021017,216.994301],[-24.582003,216.492272],[-24.966099,216.470584],[-25.112824,216.596668],[-24.774829,217.276818],[-22.659343,219.738550],[-19.396520,223.262003],[-16.335404,226.421541],[-14.825039,227.791528],[-14.634620,226.735053],[-14.555419,224.195018]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-6.321949,215.851058],[-0.432229,213.285358],[-0.696949,204.020798],[-0.961669,194.756228],[-7.106309,192.012018],[-13.250939,189.267798],[-19.528179,192.084198],[-25.805419,194.900608],[-25.805419,204.170078],[-25.805419,213.439558],[-20.414799,215.841888],[-16.194580,217.563883],[-13.617919,218.330498],[-12.607161,218.161524],[-10.894646,217.637730],[-6.321949,215.851058]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[21.558921,215.662828],[27.632081,212.909118],[27.632081,204.083658],[27.632081,195.258208],[21.191591,192.413508],[14.751091,189.568798],[8.769711,192.214118],[2.788331,194.859428],[2.539071,204.059848],[2.289811,213.260278],[8.164071,215.803488],[12.525360,217.609884],[14.762041,218.381618],[17.057152,217.597372],[21.558921,215.662828]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[37.299401,207.343718],[38.665489,202.488988],[39.798432,197.471030],[40.469048,193.439761],[40.559363,192.153484],[40.448151,191.545098],[39.925560,191.511511],[38.852132,191.769532],[35.678751,192.972978],[31.382081,194.873598],[31.382081,204.223188],[31.448494,208.501974],[31.656837,211.483613],[32.020770,213.282194],[32.265351,213.773491],[32.553951,214.011808],[33.151008,214.111593],[33.739181,213.955648],[34.322360,213.538510],[34.904431,212.854717],[36.080804,210.665308],[37.299401,207.343718]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-29.555419,202.029328],[-29.555419,195.017138],[-33.305419,193.104028],[-35.953856,191.861563],[-36.759520,191.568172],[-37.055419,191.560858],[-36.773087,192.770497],[-36.023154,194.965951],[-33.702849,200.900072],[-31.259236,206.534753],[-30.355168,208.355908],[-29.857049,209.041528],[-29.644021,206.981698],[-29.555419,202.029328]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-20.736559,190.330738],[-14.555419,187.557448],[-14.555419,178.725718],[-14.555419,169.893998],[-17.602299,168.754048],[-24.119649,166.174538],[-26.197466,165.424138],[-27.070386,165.281959],[-27.964444,165.312064],[-30.211369,165.939935],[-33.729029,167.409368],[-37.244088,169.004767],[-38.333764,169.621509],[-39.070348,170.212804],[-39.522947,170.850049],[-39.760670,171.604638],[-39.867919,173.751428],[-39.557039,178.025812],[-38.809599,183.152188],[-38.125373,186.436776],[-37.761671,187.535214],[-37.306634,188.381833],[-36.702553,189.059696],[-35.891720,189.651867],[-33.418969,190.911388],[-30.040716,192.366783],[-28.002189,193.020758],[-27.093371,192.834261],[-25.420559,192.264914],[-20.736559,190.330738]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[7.512131,190.525898],[13.548791,187.947778],[13.548791,179.041528],[13.548791,170.135278],[7.324821,167.476278],[1.100861,164.817258],[-4.852289,167.347388],[-10.805419,169.877498],[-10.805419,179.027808],[-10.805419,188.178118],[-5.414789,190.579378],[-1.387404,192.293379],[0.725651,193.042318],[3.028477,192.328559],[7.512131,190.525898]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[35.675041,190.690398],[41.374251,188.271388],[41.074361,179.258898],[40.653466,172.699498],[40.362700,170.552863],[40.062651,169.584848],[38.105147,168.500514],[34.398381,166.822548],[31.575201,165.694983],[29.661850,165.243699],[28.842942,165.255881],[28.007390,165.418195],[25.960881,166.167968],[19.428951,168.754048],[16.382081,169.893998],[16.382081,179.010538],[16.382081,188.127058],[21.772701,190.529388],[25.876062,192.249627],[27.383854,192.685268],[28.735425,192.840314],[30.085551,192.716557],[31.589011,192.315791],[35.675041,190.690398]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-6.682689,165.891938],[-0.425619,163.054848],[-0.693639,154.061638],[-0.961669,145.068418],[-7.106309,142.324358],[-13.250939,139.580298],[-19.528179,142.396698],[-25.805419,145.213108],[-25.805419,154.173728],[-25.805419,163.134368],[-22.758549,164.415618],[-13.044469,168.669078],[-6.682689,165.891938]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[24.585201,164.413678],[27.632081,163.134368],[27.632081,154.352528],[27.632081,145.570708],[21.191591,142.725998],[14.751091,139.881298],[8.769711,142.528758],[2.788331,145.176238],[2.788331,154.197778],[2.788331,163.219318],[8.806721,165.883168],[12.245514,167.341295],[14.447468,167.966617],[15.322197,167.998317],[16.172798,167.859426],[18.181721,167.120018],[24.585201,164.413678]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-33.071049,164.839688],[-29.555419,163.065918],[-29.555419,154.197778],[-29.555419,145.329638],[-33.071049,143.555868],[-37.120148,141.633391],[-38.447527,141.207192],[-39.432139,141.158760],[-40.165493,141.503899],[-40.739099,142.258414],[-41.244468,143.438108],[-41.773109,145.058788],[-42.291449,147.244057],[-42.665714,149.851171],[-42.895149,152.684163],[-42.979003,155.547064],[-42.916519,158.243906],[-42.706945,160.578721],[-42.349526,162.355541],[-41.843509,163.378398],[-41.440423,163.919622],[-41.110330,164.625837],[-40.805379,166.167208],[-40.718882,166.807079],[-40.439763,167.226825],[-39.938575,167.421394],[-39.185873,167.385730],[-36.808143,166.603494],[-33.071009,164.839688]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[40.757081,154.134598],[40.757081,141.415168],[38.647701,142.065868],[36.400634,142.910693],[33.960201,144.028128],[32.485723,144.936197],[32.028169,145.516437],[31.718566,146.333747],[31.427697,149.138377],[31.382081,154.267688],[31.382081,163.195698],[35.366451,165.004278],[38.386964,166.287629],[40.053951,166.833438],[40.326963,165.837822],[40.550536,163.111677],[40.757081,154.134598]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-20.736559,140.643238],[-14.555419,137.869948],[-14.555419,129.105108],[-14.555419,120.340288],[-21.023099,117.466578],[-27.490779,114.592868],[-33.444979,117.226148],[-39.399169,119.859428],[-39.663859,129.069718],[-39.928559,138.280008],[-34.507609,140.756358],[-30.360501,142.532269],[-28.002189,143.324608],[-27.093371,143.141445],[-25.420559,142.574852],[-20.736559,140.643238]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[7.512131,140.838398],[13.548791,138.260278],[13.559191,129.244778],[13.569591,120.229288],[7.284801,117.420268],[1.000001,114.611248],[-4.668329,117.140218],[-10.336659,119.669198],[-10.602369,129.066378],[-10.868069,138.463568],[-5.446119,140.878338],[-1.396603,142.601903],[0.725661,143.354818],[3.028487,142.641059],[7.512141,140.838398]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[35.484181,141.084598],[40.757081,138.752668],[40.757081,129.105708],[40.757081,119.458758],[34.844601,116.882998],[28.932101,114.307248],[22.657101,117.152468],[16.382081,119.997698],[16.382081,129.218628],[16.382081,138.439558],[21.772711,140.841888],[25.903891,142.559973],[27.437651,142.998363],[28.806725,143.159678],[30.153514,143.046438],[31.620420,142.661165],[35.484181,141.084598]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-29.907519,113.416528],[-29.658850,110.698617],[-29.555419,104.164068],[-29.555419,94.911618],[-35.242209,92.445318],[-39.367752,90.738279],[-41.580251,90.110124],[-42.078743,90.192884],[-42.230534,90.536073],[-42.079478,91.136594],[-41.669429,91.991348],[-41.213824,93.291738],[-41.067121,95.061502],[-41.230173,97.521616],[-41.703829,100.893058],[-42.177862,104.419236],[-42.343055,107.399014],[-42.200585,110.128924],[-41.751629,112.905498],[-40.688089,118.028528],[-35.473819,115.722528],[-29.907499,113.416528]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-6.352299,115.551778],[-0.492919,112.999298],[-0.492919,104.041528],[-0.492919,95.083758],[-6.631809,92.409368],[-10.149468,90.939935],[-12.396394,90.312064],[-13.290452,90.281959],[-14.163372,90.424138],[-16.241189,91.174538],[-22.758549,93.754048],[-25.805419,94.893998],[-25.805419,104.010538],[-25.805419,113.127058],[-20.414799,115.529388],[-16.194580,117.251383],[-13.617919,118.017998],[-12.609556,117.850067],[-10.903563,117.329114],[-6.352299,115.551778]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[21.558921,115.350328],[27.632081,112.596618],[27.632081,103.713538],[27.632081,94.830448],[21.145511,92.351798],[14.658931,89.873128],[8.499651,92.504208],[2.340371,95.135278],[2.341181,104.041528],[2.341991,112.947778],[8.190161,115.490988],[12.533020,117.297384],[14.762041,118.069118],[17.057152,117.284872],[21.558921,115.350328]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[40.757081,104.093488],[40.757081,91.020438],[36.069581,92.968468],[31.382081,94.916508],[31.382081,104.049458],[31.382081,113.182418],[35.835201,115.098588],[40.522701,117.090648],[40.688232,113.304019],[40.757081,104.093488]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-17.602299,89.413678],[-14.555419,88.134368],[-14.555419,79.393578],[-14.555419,70.652788],[-21.023099,67.779078],[-27.490779,64.905368],[-33.444979,67.540798],[-39.399169,70.176238],[-39.399169,79.197778],[-39.399169,88.219318],[-33.380779,90.883168],[-29.941986,92.341295],[-27.740032,92.966617],[-26.865303,92.998317],[-26.014702,92.859426],[-24.005779,92.120018],[-17.602299,89.413678]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[12.397701,88.386068],[12.683023,88.144202],[12.926066,87.664588],[13.290537,85.951288],[13.501561,83.164513],[13.569581,79.222608],[13.569581,70.541788],[7.284791,67.732768],[0.999991,64.923748],[-4.668339,67.452568],[-10.336669,69.981388],[-10.605329,79.070698],[-10.873989,88.160018],[-4.980329,90.810428],[0.913331,93.460838],[6.069581,91.164778],[12.397701,88.386068]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[40.757081,86.084328],[40.551374,83.513050],[40.258513,82.498195],[39.807221,81.614925],[39.173682,80.826537],[38.334076,80.096327],[35.941391,78.663628],[34.728206,77.930014],[33.432293,76.938161],[30.730479,74.330315],[28.112331,71.141253],[25.854231,67.672138],[25.318309,67.163695],[24.405970,67.092422],[22.939372,67.482118],[20.740671,68.356588],[16.313741,70.254198],[16.582281,79.372408],[16.850831,88.490628],[23.344971,90.957418],[29.839101,93.424218],[35.298091,91.011498],[38.132618,89.670070],[39.788972,88.580729],[40.268297,88.046687],[40.564634,87.474980],[40.757081,86.084328]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-42.954859,80.380588],[-43.114660,79.853210],[-43.248369,79.984682],[-43.381499,82.010278],[-43.269533,84.179994],[-43.137940,84.467468],[-42.973779,84.130588],[-42.792241,82.356770],[-42.954879,80.380588]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-29.874719,63.729028],[-29.746355,62.977058],[-29.681373,60.929617],[-29.756999,54.199118],[-30.024169,44.669198],[-35.649169,42.159568],[-41.274169,39.649948],[-41.380579,44.423858],[-41.843869,55.291528],[-41.880054,60.619649],[-41.723072,63.037725],[-41.465909,64.872638],[-40.731069,68.359998],[-35.495339,66.044508],[-29.874719,63.729028]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-6.321949,65.851058],[-0.432229,63.285358],[-0.696949,54.068118],[-0.961669,44.850878],[-7.182199,42.112458],[-13.402719,39.374048],[-19.604069,42.185868],[-25.805419,44.997698],[-25.805419,54.218628],[-25.805419,63.439558],[-20.414799,65.841888],[-16.194580,67.563883],[-13.617919,68.330498],[-12.607161,68.161524],[-10.894646,67.637730],[-6.321949,65.851058]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[19.868331,66.474188],[24.542121,64.531848],[23.289241,59.208558],[22.400099,53.871097],[22.126270,51.019431],[22.021721,48.513708],[21.948097,45.422588],[21.805962,44.398845],[21.541925,43.618139],[21.117221,43.001839],[20.493084,42.471315],[18.491451,41.353068],[14.975831,39.563998],[8.647701,42.396648],[2.319581,45.229288],[2.330881,54.244778],[2.342081,63.260278],[8.190251,65.803488],[12.490344,67.609884],[14.616531,68.381618],[16.397745,67.835712],[19.868431,66.474188]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-20.778849,40.282188],[-14.555419,37.460358],[-14.555419,28.677178],[-14.555419,19.893998],[-17.602299,18.754048],[-24.119649,16.174538],[-26.197466,15.424138],[-27.070386,15.281959],[-27.964444,15.312064],[-30.211369,15.939935],[-33.729029,17.409368],[-39.867919,20.083758],[-39.856719,29.015768],[-39.845419,37.947778],[-33.997249,40.490988],[-27.575629,43.069118],[-25.342490,42.264857],[-20.778749,40.282188]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[6.945291,40.637738],[12.632081,38.171438],[12.632081,29.047008],[12.632081,19.922588],[6.906291,17.353008],[1.180491,14.783418],[-4.812459,17.330458],[-10.805419,19.877508],[-10.805419,29.002288],[-10.805419,38.127058],[-5.414799,40.529388],[0.617161,43.017878],[2.740598,42.354218],[6.945291,40.637738]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[25.834291,22.947778],[28.963711,17.557148],[29.868511,15.866670],[29.910268,15.376451],[29.662992,15.117314],[29.115232,15.085062],[28.255534,15.275497],[25.554511,16.307638],[19.428951,18.765118],[16.382081,19.893998],[16.382081,29.077148],[16.422367,34.399646],[16.704354,37.220595],[17.011514,37.987386],[17.469734,38.482066],[18.960201,39.126128],[21.538331,39.991978],[22.969851,32.876128],[24.401786,27.024384],[25.164962,24.601301],[25.834291,22.947778]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-42.954859,28.818088],[-43.114660,28.290710],[-43.248369,28.422182],[-43.381499,30.447778],[-43.269533,32.617494],[-43.137940,32.904968],[-42.973779,32.568088],[-42.792241,30.794270],[-42.954879,28.818088]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-29.907519,13.104028],[-29.658850,10.493417],[-29.555419,4.216828],[-29.555419,-4.670362],[-33.071049,-6.444132],[-37.317363,-8.473534],[-38.646236,-8.838846],[-39.586203,-8.696510],[-40.242727,-7.990482],[-40.721272,-6.664719],[-41.566279,-1.929822],[-42.086386,1.981078],[-42.268268,5.241095],[-42.113854,8.294192],[-41.625079,11.584328],[-40.509809,17.637128],[-35.384729,15.370588],[-29.907539,13.104028]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-6.523479,15.213398],[-0.459929,12.635278],[-0.710799,3.851848],[-0.961669,-4.931582],[-7.106309,-7.675642],[-13.250939,-10.419702],[-19.528179,-7.603302],[-25.805419,-4.786892],[-25.805419,3.947298],[-25.805419,12.681488],[-20.414799,15.144588],[-16.249713,16.911158],[-13.805599,17.699608],[-12.854000,17.531844],[-11.163816,17.007179],[-6.523479,15.213398]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[21.450941,15.018238],[27.632081,12.244948],[27.632081,3.907828],[27.632081,-4.429292],[21.191591,-7.273992],[14.751091,-10.118702],[8.769711,-7.473542],[2.788331,-4.828392],[2.531831,3.903438],[2.275331,12.635278],[8.156831,15.136108],[14.654061,17.714228],[16.904634,16.954162],[21.450941,15.018238]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[35.379181,11.932148],[37.099247,10.939486],[38.407372,10.050642],[39.359839,9.138343],[40.012926,8.075319],[40.422914,6.734299],[40.646082,4.988011],[40.757081,-0.229452],[40.658586,-5.529479],[40.413101,-7.041083],[39.928021,-7.885643],[39.570140,-8.079320],[39.121769,-8.132081],[37.912766,-7.849318],[33.960201,-5.971872],[32.486318,-5.064237],[32.028789,-4.485197],[31.719095,-3.670688],[31.427895,-0.879300],[31.382081,4.221858],[31.484617,9.614496],[31.668018,11.266983],[31.988601,12.318283],[32.483189,12.839423],[33.188601,12.901430],[34.141658,12.575329],[35.379181,11.932148]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-14.758189,-20.774862],[-14.492219,-29.631642],[-20.991499,-32.519392],[-27.490779,-35.407132],[-33.444979,-32.771702],[-39.399169,-30.136262],[-39.399169,-21.114722],[-39.399169,-12.093182],[-33.474669,-9.470882],[-27.550159,-6.848592],[-21.287169,-9.383332],[-15.024169,-11.918082],[-14.758189,-20.774862]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[10.053951,-10.930372],[11.528157,-11.847238],[11.985701,-12.430829],[12.295347,-13.251067],[12.586373,-16.061109],[12.632081,-21.196612],[12.632081,-30.136602],[6.831631,-32.769642],[1.031161,-35.402672],[-4.652749,-32.866892],[-10.336669,-30.331112],[-10.605329,-21.241802],[-10.873989,-12.152482],[-4.980329,-9.517212],[-1.102589,-7.950031],[0.411748,-7.609454],[1.853591,-7.584010],[3.380837,-7.888538],[5.151382,-8.537880],[10.053951,-10.930372]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[35.817081,-9.568482],[40.757081,-11.616002],[40.757081,-21.114722],[40.757081,-30.613442],[35.376511,-32.843572],[31.487542,-34.340412],[30.036201,-34.697195],[28.714584,-34.785647],[27.373411,-34.600338],[25.863404,-34.135837],[21.739771,-32.347542],[16.316201,-29.853362],[16.583521,-20.934242],[16.850831,-12.015112],[22.007081,-9.849742],[26.081593,-8.294662],[27.667932,-7.894329],[29.111214,-7.742260],[30.529604,-7.836047],[32.041268,-8.173284],[35.817081,-9.568482]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-42.954859,-22.744412],[-43.114660,-23.271790],[-43.248369,-23.140318],[-43.381499,-21.114722],[-43.269533,-18.945006],[-43.137940,-18.657532],[-42.973779,-18.994412],[-42.792241,-20.768230],[-42.954879,-22.744412]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-29.874719,-36.583472],[-29.746355,-37.335442],[-29.681373,-39.382883],[-29.756999,-46.113382],[-30.024169,-55.643302],[-35.771349,-58.207492],[-38.753952,-59.488167],[-40.435775,-60.034166],[-40.882001,-60.047790],[-41.114760,-59.897100],[-41.088849,-59.128582],[-41.002724,-58.054323],[-41.085829,-56.343975],[-41.681819,-51.956362],[-42.102287,-48.993885],[-42.230624,-46.057015],[-42.065283,-42.890693],[-41.604719,-39.239862],[-40.504979,-32.052492],[-35.382299,-34.317982],[-29.874679,-36.583472]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-6.524269,-34.474102],[-0.461499,-37.052222],[-0.711589,-46.256912],[-0.961669,-55.461622],[-7.182199,-58.200042],[-13.402719,-60.938452],[-19.604069,-58.126632],[-25.805419,-55.314802],[-25.805419,-46.160412],[-25.805419,-37.006012],[-20.414799,-34.542912],[-16.249713,-32.776342],[-13.805599,-31.987892],[-12.854063,-32.155656],[-11.164050,-32.680321],[-6.524269,-34.474102]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[21.450941,-34.669262],[27.632081,-37.442552],[27.632081,-46.207392],[27.632081,-54.972212],[21.222971,-57.819902],[14.813861,-60.667592],[8.566721,-57.875402],[2.319581,-55.083212],[2.324581,-46.067722],[2.329581,-37.052222],[8.183931,-34.551392],[14.654031,-31.973272],[16.904599,-32.733338],[21.450901,-34.669262]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[40.448311,-58.767232],[39.963874,-58.761141],[38.913460,-58.475945],[35.733521,-57.265352],[31.382081,-55.400102],[31.382081,-46.108852],[31.382081,-36.817582],[35.835201,-34.988702],[40.288331,-33.159822],[40.550001,-45.781852],[40.628085,-54.802897],[40.448311,-58.767232]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-20.778849,-60.030312],[-14.555419,-62.852142],[-14.555419,-71.635322],[-14.555419,-80.418502],[-17.602299,-81.558452],[-24.026349,-84.095892],[-26.048085,-84.813395],[-26.915045,-84.945293],[-27.813218,-84.909257],[-30.084658,-84.283289],[-33.625319,-82.835302],[-39.847129,-80.177222],[-39.846319,-71.270972],[-39.845509,-62.364722],[-33.997339,-59.821512],[-27.575719,-57.243382],[-25.342585,-58.047643],[-20.778849,-60.030312]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[6.945291,-59.674762],[12.632081,-62.141062],[12.632081,-71.270972],[12.632081,-80.400882],[6.853031,-82.907192],[1.073971,-85.413502],[-4.865719,-82.889092],[-10.805419,-80.364682],[-10.805419,-71.275062],[-10.805419,-62.185442],[-5.414799,-59.783112],[0.617161,-57.294622],[2.740597,-57.958282],[6.945291,-59.674762]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[35.487541,-59.620962],[40.757081,-62.033432],[40.757081,-71.270982],[40.757081,-80.508532],[35.422141,-82.950952],[30.087201,-85.393372],[23.234641,-82.894102],[16.382081,-80.394822],[16.382081,-71.356682],[16.382081,-62.318522],[21.772701,-59.855422],[25.912846,-58.090374],[27.449341,-57.640540],[28.819834,-57.475922],[30.166613,-57.594088],[31.631965,-57.992605],[35.487541,-59.620962]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[24.585201,-85.898832],[27.632081,-87.178142],[27.632081,-95.918932],[27.632081,-104.659722],[21.222971,-107.507412],[14.813861,-110.355102],[8.566721,-107.562912],[2.319581,-104.770722],[2.319581,-96.114732],[2.319581,-87.458742],[8.628561,-84.638912],[12.224986,-83.095261],[14.508830,-82.420418],[15.400656,-82.373030],[16.254884,-82.499920],[18.237941,-83.219302],[24.585201,-85.898832]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-34.704009,-84.828352],[-29.486649,-87.135722],[-29.755409,-96.233422],[-30.024169,-105.331122],[-35.649169,-107.840602],[-41.274169,-110.350062],[-41.371369,-106.513652],[-41.772234,-102.566258],[-42.599609,-98.463022],[-43.041144,-96.122850],[-43.222137,-93.540003],[-43.167800,-90.885449],[-42.903345,-88.330157],[-42.453986,-86.045096],[-41.844935,-84.201234],[-41.101405,-82.969540],[-40.687089,-82.636683],[-40.248609,-82.520982],[-34.704009,-84.828352]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-5.729519,-84.948532],[-0.427039,-87.376092],[-0.694359,-96.262762],[-0.961669,-105.149442],[-7.182199,-107.887702],[-13.402719,-110.625962],[-19.637719,-107.798882],[-25.872719,-104.971802],[-25.604699,-95.899932],[-25.336669,-86.828062],[-20.180419,-84.762152],[-15.952252,-83.242550],[-14.292848,-82.870419],[-12.776128,-82.758803],[-11.281762,-82.909255],[-9.689424,-83.323326],[-5.729519,-84.948532]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[40.757081,-87.738862],[40.705170,-89.645623],[40.529096,-91.247330],[40.198348,-92.596610],[39.682415,-93.746088],[38.950785,-94.748391],[37.972947,-95.656144],[36.718389,-96.521972],[35.156601,-97.398502],[31.382081,-99.365892],[31.382081,-93.248742],[31.382081,-87.131602],[35.366451,-85.361262],[38.386964,-84.091515],[40.053951,-83.524712],[40.326963,-83.836756],[40.550536,-84.735308],[40.757081,-87.738862]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-20.778849,-109.717822],[-14.555419,-112.539652],[-14.555419,-121.255942],[-14.555419,-129.972222],[-21.023099,-132.845932],[-27.490779,-135.719642],[-33.444979,-133.086362],[-39.399169,-130.453082],[-39.648429,-121.252662],[-39.897689,-112.052232],[-34.023429,-109.509022],[-27.575719,-106.930892],[-25.342584,-107.735153],[-20.778839,-109.717822]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[6.945291,-109.362272],[12.632081,-111.828572],[12.632081,-121.138842],[12.632081,-130.449112],[6.831631,-133.082152],[1.031161,-135.715182],[-4.652749,-133.179242],[-10.336669,-130.643312],[-10.602099,-121.271382],[-10.867529,-111.899452],[-5.445849,-109.483862],[0.617161,-106.982132],[2.740597,-107.645792],[6.945291,-109.362272]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[24.249671,-111.817862],[23.653435,-114.012195],[23.082850,-117.041492],[22.602630,-120.505849],[22.277491,-124.005362],[21.811494,-129.798813],[21.460591,-132.208482],[18.786861,-131.294182],[18.006958,-130.972050],[17.416966,-130.603167],[16.990403,-130.075875],[16.700784,-129.278515],[16.426445,-126.426948],[16.382081,-121.155192],[16.382081,-111.930492],[20.835211,-109.975432],[25.481121,-107.926932],[25.198906,-109.031343],[24.249671,-111.817862]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-29.907519,-136.895972],[-29.658850,-139.614863],[-29.555419,-146.151772],[-29.555419,-155.407562],[-34.946049,-157.743852],[-40.336669,-160.080142],[-41.087359,-157.159932],[-42.691758,-150.086669],[-43.115578,-147.240343],[-43.290361,-144.701741],[-43.218517,-142.356501],[-42.902456,-140.090264],[-42.344590,-137.788667],[-41.547329,-135.337352],[-40.488059,-132.372472],[-35.373839,-134.634222],[-29.907519,-136.895972]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-6.550369,-134.786602],[-0.513709,-137.364722],[-0.513709,-146.270972],[-0.513709,-155.177222],[-6.626719,-157.788322],[-12.739739,-160.399402],[-19.272569,-157.847772],[-25.805419,-155.296132],[-25.805419,-146.307332],[-25.805419,-137.318512],[-20.414799,-134.855412],[-16.249713,-133.088842],[-13.805599,-132.300392],[-12.856123,-132.468156],[-11.171719,-132.992820],[-6.550369,-134.786592]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[18.518631,-133.704722],[20.262599,-134.693030],[20.867939,-135.259096],[21.347054,-135.970182],[22.081225,-138.118654],[22.774341,-141.720922],[23.353459,-144.536726],[24.103776,-147.383763],[24.928306,-149.929902],[25.730061,-151.843012],[27.567741,-155.445152],[24.553031,-156.560712],[18.348321,-159.057952],[16.430357,-159.758661],[15.581424,-159.885784],[14.682682,-159.848065],[12.366248,-159.230035],[8.742001,-157.808442],[2.325681,-155.177222],[2.327681,-146.270972],[2.329681,-137.364722],[8.184031,-134.863892],[12.271873,-133.141339],[13.582998,-132.678267],[14.595860,-132.459325],[15.453160,-132.468505],[16.297600,-132.689802],[18.518701,-133.704722]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-14.758189,-170.774862],[-14.492219,-179.631642],[-20.991499,-182.519391],[-27.490779,-185.407135],[-33.444979,-182.771700],[-39.399169,-180.136262],[-39.399169,-171.114722],[-39.399169,-162.093182],[-33.474669,-159.470882],[-27.550159,-156.848592],[-21.287169,-159.383332],[-15.024169,-161.918082],[-14.758189,-170.774862]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[10.053951,-160.930372],[11.528157,-161.847238],[11.985701,-162.430829],[12.295347,-163.251067],[12.586373,-166.061109],[12.632081,-171.196612],[12.632081,-180.136602],[6.831631,-182.769638],[1.031161,-185.402672],[-4.652749,-182.866894],[-10.336669,-180.331112],[-10.605329,-171.241802],[-10.873989,-162.152482],[-4.980329,-159.517212],[-1.102589,-157.950031],[0.411748,-157.609454],[1.853591,-157.584010],[3.380837,-157.888538],[5.151382,-158.537880],[10.053951,-160.930372]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[30.396611,-159.306342],[31.138666,-160.227873],[32.452782,-161.417206],[34.153308,-162.720814],[36.054591,-163.985172],[40.757081,-166.878642],[40.757081,-173.746042],[40.757081,-180.613442],[35.376511,-182.843569],[31.487542,-184.340412],[30.036201,-184.697195],[28.714584,-184.785647],[27.373411,-184.600337],[25.863404,-184.135835],[21.739771,-182.347538],[16.316201,-179.853362],[16.583521,-170.934242],[16.850831,-162.015112],[22.007081,-159.849742],[25.868488,-158.312963],[27.179743,-157.906364],[28.173203,-157.734793],[28.920242,-157.793629],[29.492239,-158.078248],[29.960570,-158.584027],[30.396611,-159.306342]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-29.907519,-186.583472],[-29.658850,-189.352533],[-29.555419,-196.010062],[-29.555419,-205.436651],[-34.738399,-207.728812],[-40.249659,-210.020972],[-40.535339,-209.789580],[-40.892928,-209.148106],[-41.721875,-206.951141],[-42.532592,-204.062529],[-43.121169,-201.114722],[-43.254853,-199.288794],[-43.208489,-197.089332],[-42.997897,-194.793189],[-42.638899,-192.677222],[-41.107249,-184.997222],[-40.612979,-182.004722],[-35.436289,-184.294097],[-29.907519,-186.583472]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-6.524269,-184.474097],[-0.461499,-187.052222],[-0.711589,-196.256919],[-0.961669,-205.461616],[-7.182199,-208.200037],[-13.402719,-210.938457],[-19.604069,-208.126631],[-25.805419,-205.314804],[-25.805419,-196.160410],[-25.805419,-187.006013],[-20.414789,-184.542910],[-16.249711,-182.776343],[-13.805599,-181.987894],[-12.854063,-182.155644],[-11.164050,-182.680309],[-6.524269,-184.474097]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[21.450941,-184.669266],[27.632081,-187.442550],[27.632081,-196.207386],[27.632081,-204.972218],[21.222971,-207.819904],[14.813861,-210.667589],[8.566721,-207.875401],[2.319581,-205.083212],[2.324581,-196.067717],[2.329581,-187.052222],[8.183931,-184.551394],[14.654031,-181.973269],[16.904599,-182.733349],[21.450901,-184.669266]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[40.448311,-208.767237],[39.963874,-208.761142],[38.913460,-208.475942],[35.733521,-207.265349],[31.382081,-205.400105],[31.382081,-196.108846],[31.382081,-186.817584],[35.835201,-184.988700],[40.288331,-183.159825],[40.550001,-195.781851],[40.628085,-204.802896],[40.448311,-208.767237]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-20.778849,-210.030306],[-14.555419,-212.852140],[-14.555419,-221.635318],[-14.555419,-230.418496],[-17.602299,-231.558452],[-24.026349,-234.095889],[-26.048085,-234.813393],[-26.915045,-234.945291],[-27.813218,-234.909256],[-30.084658,-234.283286],[-33.625319,-232.835295],[-39.847129,-230.177222],[-39.846319,-221.270972],[-39.845509,-212.364722],[-33.997339,-209.821512],[-27.575719,-207.243387],[-25.342585,-208.047643],[-20.778849,-210.030306]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[6.945291,-209.674765],[12.632081,-212.141058],[12.632081,-221.270972],[12.632081,-230.400886],[6.853031,-232.907191],[1.073971,-235.413496],[-4.865719,-232.889092],[-10.805419,-230.364687],[-10.805419,-221.275063],[-10.805419,-212.185439],[-5.414799,-209.783108],[0.617161,-207.294624],[2.740597,-207.958254],[6.945291,-209.674765]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[35.487541,-209.620945],[40.757081,-212.033424],[40.757081,-221.270973],[40.757081,-230.508522],[35.422141,-232.950940],[30.087201,-235.393356],[23.234641,-232.894089],[16.382081,-230.394820],[16.382081,-221.356669],[16.382081,-212.318517],[21.772701,-209.855413],[25.912846,-208.090366],[27.449341,-207.640532],[28.819834,-207.475913],[30.166613,-207.594078],[31.631965,-207.992594],[35.487541,-209.620948]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[21.014831,-234.444509],[21.544507,-234.760516],[20.782102,-234.990398],[15.444581,-235.183363],[7.475831,-235.194413],[11.225831,-233.512128],[13.072011,-232.776785],[14.543486,-232.418117],[15.748697,-232.421741],[16.796081,-232.773274],[18.786191,-233.653364],[21.014831,-234.444507]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-36.928679,-233.890526],[-33.774169,-235.260081],[-37.289799,-235.296771],[-38.900678,-235.235404],[-39.991221,-234.999294],[-40.609958,-234.569535],[-40.805419,-233.927222],[-40.745970,-232.957212],[-40.603091,-232.713498],[-40.323826,-232.630068],[-39.173294,-232.942328],[-36.928679,-233.890532]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[-7.992919,-233.927226],[-6.900211,-234.661440],[-6.830413,-234.897482],[-7.141725,-235.062512],[-9.097898,-235.228628],[-13.149169,-235.257971],[-17.252898,-235.223227],[-19.155574,-235.063697],[-19.397056,-234.905168],[-19.226922,-234.677082],[-17.836669,-233.961084],[-15.157680,-233.013336],[-13.873599,-232.774285],[-12.625980,-232.691783],[-11.414463,-232.765827],[-10.238687,-232.996416],[-9.098293,-233.383549],[-7.992919,-233.927224]]);
       translate([0, 0, -fudge])
         linear_extrude(height=h+2*fudge)
           polygon([[40.757081,-234.395976],[40.590638,-234.758857],[40.137451,-235.053869],[39.466734,-235.250720],[38.647701,-235.319120],[37.658326,-235.273324],[37.230065,-235.128775],[37.334842,-234.848613],[37.944581,-234.395976],[39.150830,-233.735256],[40.032427,-233.515016],[40.573227,-233.735256],[40.757081,-234.395976]]);
    }
  }
}

projection(cut=false)
scale([0.35, 0.35, 1])
poly_path4138(1);

}
// end of RotorDiskShape.scad
//---------------------------------------------------------|

// module RotorDiskShapeFilled.scad
module RotorDiskShapeFilled_Source()
{

// Module names are of the form poly_<inkscape-path-id>().  As a result,
// you can associate a polygon in this OpenSCAD program with the corresponding
// SVG element in the Inkscape document by looking for the XML element with
// the attribute id="inkscape-path-id".

// fudge value is used to ensure that subtracted solids are a tad taller
// in the z dimension than the polygon being subtracted from.  This helps
// keep the resulting .stl file manifold.
fudge = 0.1;

module poly_path4138(h)
{
  scale([25.4/90, -25.4/90, 1]) union()
  {
    linear_extrude(height=h)
      polygon([[-1.551615,238.088813],[-4.013783,237.363352],[-6.620863,236.322024],[-9.321690,234.996379],[-12.065095,233.417969],[-14.799911,231.618346],[-17.474969,229.629059],[-20.039103,227.481661],[-22.441145,225.207703],[-26.635987,220.750129],[-27.912073,219.221940],[-28.380745,218.456193],[-28.735290,217.560358],[-29.587715,216.464183],[-31.310484,214.285859],[-33.053006,211.475923],[-34.401766,208.771962],[-34.799260,207.690218],[-34.943245,206.911563],[-35.017220,206.317502],[-35.218638,205.831019],[-35.516733,205.502316],[-35.880745,205.381593],[-36.244761,205.269627],[-36.542856,204.964769],[-36.744271,204.513581],[-36.818245,203.962623],[-37.061507,202.482278],[-37.646365,200.915743],[-39.031495,197.944412],[-40.089975,194.955404],[-40.998418,191.357264],[-41.933435,186.558533],[-42.955598,179.372051],[-43.380745,173.386663],[-43.472169,171.289613],[-43.722200,169.409906],[-44.094473,167.943092],[-44.552625,167.084723],[-44.841079,166.589468],[-45.090383,165.752026],[-45.471866,163.243810],[-45.697726,159.946540],[-45.768616,156.246678],[-45.685188,152.530687],[-45.448095,149.185031],[-45.057990,146.596172],[-44.805762,145.706311],[-44.515525,145.150573],[-43.970826,144.241014],[-43.773040,143.108124],[-43.918116,141.544699],[-44.402005,139.343533],[-44.821836,137.016896],[-45.039904,134.236473],[-45.051809,131.115078],[-44.853155,127.765523],[-44.449607,122.914444],[-44.318887,119.424101],[-44.464127,115.751586],[-44.888455,110.353993],[-45.018562,107.493610],[-44.964778,104.562457],[-44.742157,101.866944],[-44.365755,99.713483],[-43.904750,97.595890],[-43.772704,96.072034],[-43.974608,94.953061],[-44.515455,94.050113],[-44.812128,93.489471],[-45.068796,92.601858],[-45.462323,90.032526],[-45.696455,86.715723],[-45.771606,83.025056],[-45.688195,79.334131],[-45.446639,76.016554],[-45.047353,73.445933],[-44.788692,72.557483],[-44.490755,71.995873],[-43.944532,71.108993],[-43.727197,70.067813],[-43.831744,68.724173],[-44.251165,66.929913],[-44.677107,64.997817],[-44.978676,62.775975],[-45.209804,57.811381],[-44.946762,52.732790],[-44.630620,50.368452],[-44.191765,48.236863],[-43.723412,46.044724],[-43.600509,44.370861],[-43.831828,42.966086],[-44.426145,41.581213],[-45.001023,39.779340],[-45.415889,37.044413],[-45.669779,33.705968],[-45.761729,30.093543],[-45.690774,26.536674],[-45.455952,23.364898],[-45.056297,20.907752],[-44.794356,20.050146],[-44.490845,19.494773],[-43.944612,18.608422],[-43.727276,17.567593],[-43.831827,16.224139],[-44.251255,14.429913],[-44.671996,12.499520],[-44.971520,10.246750],[-45.207404,5.201474],[-44.959888,0.148880],[-44.655163,-2.113037],[-44.229955,-4.056237],[-43.799540,-5.932448],[-43.691198,-7.438461],[-43.912131,-8.754894],[-44.469545,-10.062367],[-45.024427,-11.830451],[-45.423802,-14.544454],[-45.666975,-17.871255],[-45.753249,-21.477734],[-45.681928,-25.030771],[-45.452318,-28.197246],[-45.063722,-30.644038],[-44.809587,-31.493453],[-44.515445,-32.038027],[-43.970741,-32.947043],[-43.772953,-34.079588],[-43.918031,-35.642838],[-44.401925,-37.843967],[-44.821755,-40.170604],[-45.039820,-42.951027],[-45.051725,-46.072422],[-44.853075,-49.421977],[-44.449522,-54.273056],[-44.318804,-57.763399],[-44.464046,-61.435914],[-44.888375,-66.833507],[-45.018486,-69.693890],[-44.964703,-72.625043],[-44.742083,-75.320556],[-44.365685,-77.474017],[-43.904680,-79.591610],[-43.772634,-81.115466],[-43.974538,-82.234439],[-44.515385,-83.137387],[-44.812058,-83.698029],[-45.068726,-84.585642],[-45.462253,-87.154974],[-45.696385,-90.471777],[-45.771536,-94.162444],[-45.688125,-97.853369],[-45.446569,-101.170946],[-45.047283,-103.741567],[-44.788622,-104.630017],[-44.490685,-105.191627],[-43.944462,-106.078507],[-43.727128,-107.119687],[-43.831674,-108.463327],[-44.251095,-110.257587],[-44.677037,-112.189683],[-44.978606,-114.411525],[-45.209734,-119.376119],[-44.946692,-124.454710],[-44.630550,-126.819048],[-44.191695,-128.950637],[-43.723342,-131.142776],[-43.600438,-132.816639],[-43.831754,-134.221414],[-44.426065,-135.606287],[-45.000946,-137.408160],[-45.415815,-140.143087],[-45.669706,-143.481532],[-45.761656,-147.093957],[-45.690701,-150.650826],[-45.455877,-153.822602],[-45.056220,-156.279748],[-44.794277,-157.137354],[-44.490765,-157.692727],[-43.944531,-158.579078],[-43.727193,-159.619907],[-43.831743,-160.963361],[-44.251175,-162.757587],[-44.679518,-164.686207],[-44.981447,-166.883511],[-45.207459,-171.799977],[-44.932004,-176.938602],[-44.607099,-179.413603],[-44.157875,-181.731001],[-43.662586,-184.217634],[-43.529910,-186.049362],[-43.769812,-187.534291],[-44.392255,-188.980525],[-44.978784,-190.801179],[-45.404169,-193.548528],[-45.666951,-196.894660],[-45.765671,-200.511665],[-45.698871,-204.071634],[-45.465090,-207.246656],[-45.062871,-209.708821],[-44.798141,-210.570110],[-44.490755,-211.130219],[-43.944522,-212.016576],[-43.727186,-213.057407],[-43.831737,-214.400861],[-44.251165,-216.195087],[-44.675671,-218.121291],[-44.976885,-220.339096],[-45.210276,-225.296563],[-44.953012,-230.361585],[-44.640907,-232.713836],[-44.206765,-234.828263],[-43.158005,-238.993407],[1.261945,-238.993407],[45.681905,-238.993407],[45.681905,-204.244275],[45.617320,-189.336983],[45.428734,-178.079270],[45.123904,-170.763047],[44.930321,-168.674217],[44.710585,-167.680227],[44.077150,-166.868442],[43.070461,-165.999777],[41.828972,-165.178317],[40.491135,-164.508147],[38.195187,-163.282270],[36.016615,-161.586247],[33.974352,-159.448916],[32.087330,-156.899117],[30.374483,-153.965687],[28.854743,-150.677464],[27.547042,-147.063288],[26.470315,-143.151997],[25.801439,-139.735659],[25.382391,-136.266567],[25.203784,-132.774421],[25.256230,-129.288918],[25.530345,-125.839757],[26.016741,-122.456635],[26.706031,-119.169251],[27.588830,-116.007302],[28.655751,-113.000487],[29.897406,-110.178504],[31.304411,-107.571050],[32.867377,-105.207825],[34.576919,-103.118526],[36.423651,-101.332851],[38.398185,-99.880499],[40.491135,-98.791167],[41.828972,-98.120997],[43.070461,-97.299537],[44.077150,-96.430872],[44.710585,-95.619087],[44.945910,-94.053726],[45.149859,-90.486350],[45.463626,-78.489563],[45.714640,-43.055907],[45.463626,-7.622251],[45.149859,4.374536],[44.945910,7.941912],[44.710585,9.507273],[44.077150,10.319058],[43.070461,11.187723],[41.828972,12.009183],[40.491135,12.679353],[38.195187,13.905230],[36.016615,15.601253],[33.974352,17.738584],[32.087330,20.288383],[30.374483,23.221813],[28.854743,26.510036],[27.547042,30.124212],[26.470315,34.035503],[25.801439,37.451842],[25.382391,40.920933],[25.203784,44.413080],[25.256230,47.898583],[25.530345,51.347745],[26.016741,54.730868],[26.706031,58.018253],[27.588830,61.180202],[28.655751,64.187017],[29.897406,67.009001],[31.304411,69.616454],[32.867377,71.979679],[34.576919,74.068977],[36.423651,75.854651],[38.398185,77.307003],[40.491135,78.396333],[41.821525,79.052872],[43.042740,79.837218],[44.019425,80.650957],[44.616225,81.395673],[44.859383,83.109990],[45.075775,87.081373],[45.425375,100.525286],[45.659246,119.187321],[45.771606,140.527386],[45.608679,181.081234],[45.321831,195.214833],[45.124533,199.634511],[44.890355,201.866093],[43.902476,205.501076],[42.759462,208.990668],[41.468042,212.326910],[40.034945,215.501842],[38.466899,218.507508],[36.770633,221.335947],[34.952877,223.979202],[33.020359,226.429314],[30.979808,228.678325],[28.837953,230.718275],[26.601522,232.541207],[24.277246,234.139161],[21.871852,235.504179],[19.392070,236.628303],[16.844628,237.503574],[14.236255,238.122033],[9.811315,238.779444],[5.875501,238.993407],[2.173135,238.763383],[-1.551465,238.088833]]);
  }
}

projection(cut=false)
scale([0.35, 0.35, 1])
poly_path4138(1);

}
// end of RotorDiskShapeFilled.scad
//---------------------------------------------------------|
























