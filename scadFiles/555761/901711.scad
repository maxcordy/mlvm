///////////////////////////////////////////////////////////////////////////////
////////////////////// Rounded Inside Desk Tray ///////////////////////////////
/*/////////////////////////////////////////////////////////////////////////////
date started:
date finished:
modeler:		
copyright:		N/A
comments:		Rounded Inside Desk Tray so it's easier to pick things up
*//////////////////////////////////////////////////////////////////////////////
/////////////////////////// - Parameters - ////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
/* [Global] */
// Resolution of the tray?
$fn=64; // [16:Fast, 32:Normal, 64:Slow, 128:SuperSlow]

/* [Tray Outer Dimensions] */
// Outer width of the tray?
o_width = 140; // [50:145]
// Outer height of the tray?
o_height = 140; // [50:145]
// Outer corner radius of the tray?
o_rad = 5; // [1:15]
// Outer tray box sides only?
o_sides_only = true; // [true, false]
// Wall thickness?
wall = 3; // [1:7]

/* [Tray Inner Dimensions] */
// Inner depth of the tray?
i_depth = 20; // [5:145]
// Inner corner radius of the tray?
i_rad_multiplier = 3; // [1:15]

////////////// math //////// - Don't Change - //////////////// math ///////////
/* [Hidden] */
use <MCAD/boxes.scad>;
o_depth = i_depth + wall;
i_sides_only = false;
///////////////////////////////////////////////////////////////////////////////
//////////////////////////// - Renders - //////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
difference()
{
	o_box();
	i_box();
}
///////////////////////////////////////////////////////////////////////////////
///////////////////////////// - Modules - /////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
module o_box()
{
	roundedBox([o_width, o_height, o_depth], o_rad, o_sides_only);
}
///////////////////////////////////////////////////////////////////////////////
module i_box()
{
	translate([0,0,i_depth-(wall*2)]) roundedBox([o_width-(wall*2), o_height-(wall*2), (o_depth*2)], o_rad*i_rad_multiplier, i_sides_only);
}
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
///////////////////////////// - Echos - ///////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
echo(" -- /////////// - Echos - ////////////// --");
echo("$fn - Resolution = ",$fn); //Resolution
//echo(" = ", ); //Description

echo(" -- /////////////////////////////////////// --");
echo("clip - ([0,0,0])  ");
echo("clip - translate([0,0,0])  ");
echo("clip - rotate([0,0,0])  ");
echo(" -- /////////////////////////////////////// --");
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
////////////////////////////// - Clip_Pad - ///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//	([0,0,0])
//	translate([0,0,0]){
//	rotate([0,0,0]){
//
//  -- Golden Rule of 1.6
//
// roundedBox([width, height, depth], float radius, bool sidesonly);
// EXAMPLE USAGE:
// roundedBox([20, 30, 40], 5, true);
// size is a vector [w, h, d]
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////