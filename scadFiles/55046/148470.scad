/**************************************************************************
 * File: oxystele_decimated.scad
 * Date: 2013-03-05
 * Version: 0.2
 * Author: Miles Lightwood <m@teamteamusa.com>
 * Copyright (C): 2013
 *
 * All measurements in millimeters
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the Attribution Non-Commercial Share Alike
 *  (cc by-nc-sa) License as published by the Creative Commons Corporation;
 *  either version 3 of the License, or (at your option) any later version.
 *  
 *  See http://creativecommons.org/licenses/by-nc-sa/3.0/legalcode for details.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 **************************************************************************/
//
// Number of faces: 498
// Number of vertices: 251
// Previous downloads: 12
//
// To use this file in another OpenSCAD file
// use <oxystele_decimated.scad>;
//
// Test
// oxystele_decimated();

//preview[view:south, tilt:top]

use <utils/build_plate.scad>;

// Good starting values: onlyShell=1, scale=1, sliceThick=0, slicePos=0, ringThick=18, ringDia=55, moveX=0, moveY=543, moveZ=0, earring=1
shellInstructions = "";

// Good starting values: onlyShell=0, scale=1, sliceThick=25, slicePos=90, ringThick=15, ringDia=40, moveX=0, moveY=490, moveZ=0, earring=1
sliceInstructions = "";

// Use full shell or slice (onlyShell)
shellOrSlice = 0;//[0:Slice,1:Shell]
// Overall shell size multiplier: 1 = 55mm long (scale)
shellScale = 1;
// Slice thickness (sliceThick): 
sliceThickness = 15;//[2:35]
// Up or down position of slice (slicePos): 
slicePosition = 4;//[-100:100]
// Remove hanging ring?
removeHangingRing = 0;//[0:No,1:Yes]
// Thickness of hanging ring (ringThick): 
ringThickness = 3;//[2:5]
// Diameter of hanging ring (ringDia): 
ringDiameter = 10;//[5:15]
// Move hanging ring sideways (moveX):  
moveRingLeftOrRight = 0;//[-20:20]
// Move hanging ring forward or backward (moveY): 
moveRingForwardOrBackward = 52;//[-30:70]
// Move hanging ring up or down (moveZ): 
moveRingUpOrDown = 0;//[-30:30]
// Rotate hanging ring for earring or necklace (earring)
earringOrNecklace = 1;//[0:Necklace,1:Earring]
// Useful to gauge size of shell; each square is 10mm. Will not print
showBuildPlate = 0;//[0:No,1:Yes]
//for display only, doesn't contribute to final object
build_plate_selector = 0; //[0:Replicator 2,1: Replicator,2:Thingomatic,3:Manual]
//when Build Plate Selector is set to "manual" this controls the build plate x dimension
build_plate_manual_x = 100; //[100:600]
//when Build Plate Selector is set to "manual" this controls the build plate y dimension
build_plate_manual_y = 100; //[100:600]
// Version 0.2
changeLog = "Added Build Plate Selector";

// hide and remove magic numbers as best as possible
function cube_side() = 800*shellScale;
// vector to optimally reposition shell 
function reposVector() = [0, 124, 0];
function slicingCubeOffsetY() = 60;
// since shell is scaled by 0.1 to become jewelry sized (55 mm), everything else must be scaled to real world size - by 10x - to work
function realWorldScale(value) = (value*10)/2;
function oxystele_decimated_vertices() = [[-66.69609,65.90891,14.33161],[18.23258,-8.28002,4.217],[-9.42659,25.45067,47.62234],[-57.61197,70.01479,-39.22115],[20.08006,57.9047,-60.80128],[23.75941,79.2515,17.97847],[7.64092,97.41754,-38.473],[-39.39954,88.38177,-31.7247],[-35.25148,100.29874,47.29945],[64.53353,109.52149,18.80127],[6.26377,130.70552,-30.32849],[48.48362,112.60713,-40.26556],[89.26154,118.22831,-46.45415],[-48.54521,128.9549,-52.77352],[-24.42207,104.87679,94.02611],[-52.54921,148.91078,62.75336],[33.54602,175.30894,39.54394],[78.35112,104.22461,48.21707],[72.27469,167.33444,48.90151],[14.80538,145.01059,40.22376],[42.44669,200.55785,-52.57277],[83.50934,178.96895,-30.53708],[-4.70403,206.83055,-30.11808],[49.73523,190.38873,-77.7885],[38.13922,125.57302,-97.65371],[71.29568,169.43301,-79.92988],[22.85615,169.23483,-107.4693],[-53.60951,215.99719,-80.79713],[-64.11716,137.57373,-90.8946],[-71.13049,182.63289,-95.15099],[-110.69939,152.39308,-40.39533],[5.66307,175.65216,-24.52932],[-123.30166,195.85236,-23.1787],[-90.88702,242.47638,21.02951],[-112.10368,149.07127,41.90631],[-104.01812,212.98674,79.4101],[-149.33673,230.78613,6.17982],[-49.39903,258.88986,72.01659],[-49.38709,176.50642,122.6866],[-21.22592,253.54881,121.4419],[-18.15008,219.46071,139.67601],[-19.52432,207.5981,5.81174],[9.51817,252.87476,12.2904],[37.46486,281.13174,74.88819],[65.94069,189.55118,125.99467],[90.5794,268.00192,101.8505],[82.47388,229.27391,121.22999],[91.96033,159.38503,89.20451],[108.93954,299.96732,28.1195],[147.0789,240.02322,47.26942],[152.71687,208.21851,14.35308],[17.08536,288.79593,2.43532],[137.71562,278.13834,33.04404],[132.44566,164.41594,-4.74596],[145.17416,288.2063,-27.51493],[145.08745,264.97586,-78.90697],[65.66516,322.01956,-46.46649],[88.96828,325.45569,-98.03049],[119.41334,224.82285,-108.43201],[81.61783,310.80878,-131.36749],[65.04125,216.64265,-145.99446],[-5.72104,317.97009,-16.33491],[94.56071,265.60196,-139.04327],[49.23143,279.51099,-164.66246],[-39.141,358.2883,-65.74242],[18.04154,310.95465,-167.75677],[-7.91994,342.36444,-147.87436],[-16.23509,281.23029,-177.4633],[-23.21568,230.61981,-167.25861],[-49.22499,192.10709,-140.84038],[-79.36197,338.16727,-149.71396],[-94.58232,286.93158,-157.19638],[-71.49741,364.11279,-113.04781],[-129.62854,224.08299,-107.67733],[-122.16717,325.23331,-134.74162],[-156.44669,277.06836,-103.78568],[-127.46659,377.83197,-70.24926],[-156.21768,356.66397,-83.60274],[-175.85257,315.94025,-77.42117],[-174.83913,234.50359,-14.69776],[-190.94183,347.77029,-21.73636],[-197.53139,302.41281,0.44411],[-169.65654,387.11337,9.34913],[-69.17094,408.17105,41.26536],[-137.62645,410.94955,68.47603],[-191.99533,356.53302,49.8892],[-188.6915,292.9632,66.69531],[-143.70255,214.24641,78.39141],[-166.06003,388.73773,92.0685],[-166.94402,354.25259,121.96746],[-65.04481,435.24976,115.47281],[-148.3076,313.53183,147.32465],[-140.08241,383.75616,147.07571],[-99.46668,423.15613,137.27638],[-96.92518,407.49057,174.45564],[-99.39249,230.95898,141.75539],[-110.25347,361.86807,184.05595],[-67.96476,285.19589,191.93396],[-8.26305,444.47052,179.09175],[-46.10481,369.95737,215.26692],[-12.2229,421.17877,207.6981],[0.45403,433.0014,24.8856],[39.00826,464.01712,144.3842],[-6.33615,344.35211,222.2363],[15.32107,268.40887,196.53809],[54.40273,392.5853,221.77324],[43.2883,463.1911,79.48696],[-18.62354,403.38092,-0.17542],[62.64275,419.78387,211.78535],[79.07814,361.60129,215.47466],[87.83176,229.9384,149.12512],[89.45809,309.40381,197.09917],[86.72483,455.53989,180.59113],[132.48158,422.7048,188.11391],[162.27122,387.17224,175.48064],[135.35266,483.20828,120.2973],[166.72464,316.88864,147.07712],[123.44312,495.64859,65.36184],[154.42435,461.76321,147.42659],[188.02519,443.93903,136.65277],[165.97998,257.98495,93.27393],[217.26683,422.9422,109.51183],[225.33318,388.3797,97.10203],[52.00659,478.66284,12.0933],[200.65437,475.33774,89.82888],[182.63069,498.72119,59.44855],[214.04724,329.63159,81.09],[233.7655,459.26572,55.79245],[241.05968,362.05969,27.11876],[251.65175,432.66684,18.39733],[204.99782,285.10721,26.55872],[227.32402,491.52716,6.18103],[88.48428,510.39835,-18.49214],[196.53548,520.63062,-37.67819],[226.0954,321.13446,-33.23769],[133.04156,534.16235,-59.26521],[244.38814,476.09604,-45.70576],[252.81847,406.65793,-29.15535],[244.81409,453.90576,-88.17757],[217.47992,509.36389,-90.05628],[244.85466,405.37372,-81.65495],[164.883,262.95987,-99.94179],[202.67369,329.02017,-115.36383],[211.6962,493.55429,-146.14496],[222.48698,392.70538,-129.23329],[178.62164,532.41071,-142.97585],[213.17537,449.06931,-162.97359],[122.83496,556.65021,-162.36159],[176.77335,378.28076,-186.71411],[82.65467,554.58197,-104.28434],[14.71498,476.01196,-4.79887],[34.51707,507.4314,-36.96175],[117.14244,284.91446,-170.1748],[151.4709,523.47217,-205.4855],[160.10745,468.61969,-221.936],[151.07063,390.41513,-213.76984],[-40.6257,123.38368,27.79652],[67.7236,137.89064,-23.70093],[41.47795,121.1394,53.91262],[43.53018,144.29987,-77.16322],[35.96463,171.69838,-55.23503],[48.01019,148.84964,25.93941],[-17.3596,191.10562,-85.36731],[-56.85054,159.07433,-78.12933],[-102.2233,174.67624,-29.00195],[-91.21034,218.04546,10.17523],[-92.39638,208.81006,58.51167],[-73.24883,186.64185,89.7916],[-53.61531,93.68184,-10.59295],[-13.64009,247.34933,81.10452],[-13.12197,236.14795,111.73833],[26.82662,202.78622,122.00522],[64.70754,264.353,79.54862],[104.04132,256.47977,71.93507],[117.0323,209.40771,57.22984],[88.28778,288.13492,-5.02103],[138.38484,256.0101,-22.96495],[117.64043,289.91357,-33.69119],[96.80466,281.62674,-108.63261],[-9.49551,328.57617,-85.47385],[81.29972,236.00279,-121.86704],[43.66657,314.44305,-126.5688],[35.78348,272.33334,-148.37297],[-10.56518,202.30728,-130.8112],[-28.10113,274.12354,-157.53896],[-17.29959,315.30734,-147.02612],[-71.92405,344.35043,-110.02895],[-89.70593,328.04068,-127.73807],[-69.80741,250.02762,-137.30264],[-122.45823,295.80969,-115.40179],[-129.91725,241.35715,-84.72588],[-32.71468,346.22815,2.51908],[-150.75732,347.16861,-64.26726],[-170.76697,313.05664,-39.85838],[-142.63123,381.16785,22.93912],[-97.97747,380.46329,18.56352],[-176.26263,293.04056,25.00759],[-171.27252,360.37531,32.61972],[-140.09805,249.27437,78.37637],[-163.72818,350.6947,86.11881],[-79.11392,401.78656,76.57931],[-114.10235,400.04568,114.28165],[-140.99178,312.68063,122.55454],[-7.48838,372.27271,15.42673],[-114.66499,366.59506,154.52219],[-93.57352,265.19058,142.16841],[-74.75475,401.31018,163.9102],[-82.79011,331.25046,175.69038],[2.36037,417.75668,76.60738],[-49.2701,381.7157,192.21733],[19.25424,434.32407,168.60649],[-20.61698,289.33469,183.00859],[-12.50026,350.3363,201.81786],[20.77007,410.19662,197.37386],[53.58115,447.30804,108.96234],[78.84386,297.77277,174.32904],[70.38302,366.77197,198.6745],[76.16451,414.26447,189.93774],[115.42393,447.66599,153.12981],[49.99955,445.84821,28.60803],[125.67437,386.21698,175.32101],[131.67976,475.84268,69.60709],[158.23218,423.87616,146.23569],[156.39844,313.5477,123.26762],[179.26392,384.16342,128.50993],[184.8828,442.15454,112.31564],[194.79445,344.72391,87.66412],[197.7336,476.65146,42.54625],[226.44281,407.16595,47.07863],[163.70897,494.77072,7.3477],[185.6658,289.66794,24.43169],[221.21205,453.89011,31.79374],[229.43359,378.52621,-12.90024],[27.96541,458.00031,-9.64682],[231.80429,453.02829,-20.93104],[70.43081,491.30164,-34.35073],[212.90027,487.44131,-48.84989],[181.64348,508.97913,-66.54671],[195.25259,320.32104,-64.93052],[221.18468,444.64218,-102.15617],[123.92567,518.2948,-73.09532],[206.63376,480.71094,-116.20673],[205.98886,393.22131,-119.12143],[172.51373,513.08258,-137.26439],[152.62263,313.96481,-133.05177],[182.64458,472.58533,-168.74271],[166.4713,393.28882,-173.21251],[92.83184,540.68817,-128.66122],[132.03378,524.94287,-184.89119],[146.55591,461.1167,-207.43294],[133.02664,371.68402,-190.93178]];
function oxystele_decimated_faces() = [[0,1,2],[1,0,3],[4,1,3],[5,6,7],[7,8,9],[7,9,10],[11,10,9],[1,4,12],[7,10,5],[10,11,13],[5,10,6],[0,2,14],[10,13,15],[10,15,16],[2,17,14],[16,15,18],[6,10,19],[10,16,19],[2,1,17],[16,18,20],[17,1,12],[21,20,18],[16,20,22],[20,21,23],[12,4,24],[25,26,23],[23,26,27],[20,23,27],[19,16,22],[24,4,28],[26,29,27],[22,20,27],[4,3,28],[28,3,30],[19,22,31],[29,32,27],[27,32,33],[22,27,33],[3,34,30],[34,3,0],[32,35,33],[35,32,36],[34,0,14],[22,33,37],[33,35,37],[34,14,38],[35,39,37],[35,40,39],[22,41,31],[22,37,42],[37,39,43],[38,14,44],[37,43,42],[40,45,39],[40,46,45],[43,39,45],[14,47,44],[14,17,47],[41,22,42],[43,45,48],[46,49,45],[44,47,50],[42,43,51],[51,43,48],[45,52,48],[47,53,50],[47,17,53],[45,49,52],[52,54,48],[49,54,52],[17,12,53],[54,49,55],[51,48,56],[56,48,57],[48,54,57],[53,58,50],[53,12,58],[54,55,57],[57,55,59],[12,60,58],[12,24,60],[56,61,51],[55,62,59],[58,60,62],[62,60,63],[62,63,59],[56,57,64],[59,63,65],[61,56,64],[59,66,57],[59,65,66],[60,67,63],[60,24,68],[60,68,67],[63,67,65],[24,69,68],[64,57,66],[65,70,66],[65,67,70],[67,68,71],[66,70,72],[67,71,70],[28,69,24],[68,69,71],[64,66,72],[69,73,71],[70,71,74],[71,73,75],[69,28,73],[72,70,76],[71,75,74],[70,77,76],[74,77,70],[74,78,77],[74,75,78],[28,30,73],[73,79,75],[73,30,79],[77,78,80],[75,81,78],[75,79,81],[76,77,82],[78,81,80],[64,72,83],[72,76,83],[77,80,82],[61,64,83],[30,34,79],[83,76,84],[76,82,84],[80,85,82],[80,81,85],[79,86,81],[34,87,79],[81,86,85],[79,87,86],[82,88,84],[82,85,88],[85,89,88],[85,86,89],[83,84,90],[86,91,89],[86,87,91],[88,89,92],[90,84,93],[84,88,93],[88,94,93],[88,92,94],[87,95,91],[87,34,95],[89,96,92],[89,91,96],[34,38,95],[91,95,97],[92,96,94],[91,97,96],[90,93,98],[93,94,98],[96,97,99],[95,38,97],[96,99,94],[94,99,100],[101,83,90],[90,98,102],[94,100,98],[97,103,99],[97,104,103],[38,104,97],[99,105,100],[99,103,105],[38,44,104],[90,106,101],[83,107,61],[90,102,106],[100,105,108],[103,104,109],[104,44,110],[103,109,105],[104,111,109],[100,112,98],[100,108,112],[102,98,112],[104,110,111],[101,107,83],[108,113,112],[105,113,108],[105,109,113],[109,111,114],[109,114,113],[102,112,115],[111,116,114],[106,102,117],[102,115,117],[112,113,118],[110,116,111],[112,118,115],[113,119,118],[113,114,119],[110,120,116],[110,44,120],[114,121,119],[114,116,122],[123,106,117],[118,124,115],[118,119,124],[114,122,121],[44,50,120],[115,124,125],[116,126,122],[116,120,126],[106,123,101],[119,127,124],[119,121,127],[117,115,125],[126,128,122],[121,129,127],[121,122,129],[120,130,126],[120,50,130],[124,131,125],[124,127,131],[123,117,132],[122,128,129],[126,130,128],[125,131,133],[130,134,128],[132,117,135],[117,125,135],[127,136,131],[127,129,136],[128,137,129],[130,50,134],[135,125,133],[128,134,137],[129,138,136],[129,137,138],[131,139,133],[131,136,139],[134,140,137],[137,140,138],[50,141,134],[134,141,142],[134,142,140],[136,143,139],[136,138,143],[140,142,144],[50,58,141],[133,139,145],[140,146,138],[140,144,146],[138,146,143],[135,133,147],[133,145,147],[139,143,145],[144,148,146],[142,148,144],[132,135,149],[142,141,148],[150,123,151],[123,132,151],[135,147,149],[141,58,152],[145,153,147],[143,153,145],[146,154,143],[143,154,153],[146,148,154],[141,152,148],[151,132,149],[101,123,150],[148,155,154],[148,152,155],[19,156,6],[157,9,158],[157,159,9],[160,161,19],[160,19,31],[162,159,160],[162,160,31],[162,163,159],[41,162,31],[164,163,162],[165,164,162],[165,162,41],[166,164,165],[166,167,164],[8,7,168],[169,165,41],[169,166,165],[169,170,166],[170,167,166],[170,171,167],[158,9,8],[42,169,41],[172,170,169],[172,171,170],[172,173,171],[172,169,42],[173,174,171],[175,173,172],[176,174,173],[177,173,175],[175,172,42],[177,176,173],[159,11,9],[178,176,177],[179,175,42],[178,180,176],[179,177,175],[179,181,177],[181,178,177],[180,26,25],[182,180,178],[181,182,178],[183,26,180],[182,184,180],[184,183,180],[13,11,159],[185,182,181],[185,184,182],[186,181,179],[61,179,42],[159,163,13],[186,185,181],[183,29,26],[187,184,185],[184,188,183],[61,42,51],[186,187,185],[188,29,183],[187,189,184],[189,188,184],[188,190,29],[189,190,188],[191,179,61],[192,189,187],[163,164,13],[191,186,179],[186,192,187],[32,29,190],[193,190,189],[194,192,186],[192,193,189],[195,186,191],[195,194,186],[190,36,32],[193,196,190],[196,36,190],[164,15,13],[194,197,192],[197,193,192],[197,196,193],[167,15,164],[196,198,36],[197,199,196],[198,35,36],[200,194,195],[201,194,200],[202,198,196],[194,201,197],[201,199,197],[199,202,196],[203,195,191],[201,204,199],[203,200,195],[204,202,199],[205,198,202],[205,35,198],[203,191,61],[206,204,201],[204,207,202],[207,205,202],[205,40,35],[208,200,203],[206,209,204],[201,200,208],[209,207,204],[210,206,201],[211,40,205],[207,211,205],[167,171,15],[209,212,207],[212,211,207],[210,213,206],[213,209,206],[214,201,208],[214,210,201],[213,212,209],[215,40,211],[213,216,212],[212,216,211],[216,215,211],[19,161,156],[217,216,213],[171,18,15],[210,218,213],[218,217,213],[215,46,40],[219,208,203],[217,220,216],[107,203,61],[221,210,214],[220,215,216],[174,18,171],[219,214,208],[218,222,217],[222,220,217],[223,46,215],[221,218,210],[220,223,215],[222,224,220],[224,223,220],[225,222,218],[224,226,223],[223,49,46],[219,203,107],[221,214,219],[225,224,222],[227,218,221],[227,225,218],[228,226,224],[229,227,221],[225,228,224],[226,230,223],[223,230,49],[227,231,225],[231,228,225],[232,230,226],[233,219,107],[228,232,226],[231,234,228],[233,221,219],[174,21,18],[235,221,233],[229,221,235],[236,231,227],[236,234,231],[176,21,174],[237,227,229],[237,236,227],[234,232,228],[238,49,230],[101,233,107],[232,238,230],[238,55,49],[234,239,232],[240,237,229],[236,241,234],[241,239,234],[239,242,232],[242,238,232],[240,229,235],[237,243,236],[243,241,236],[21,176,180],[242,244,238],[244,55,238],[245,242,239],[244,62,55],[241,245,239],[242,246,244],[243,245,241],[245,246,242],[180,23,21],[247,240,235],[247,237,240],[247,243,237],[248,243,247],[249,246,245],[150,235,233],[151,247,235],[248,245,243],[246,250,244],[101,150,233],[151,235,150],[248,249,245],[249,250,246],[250,62,244],[147,153,248],[154,155,249],[250,249,155],[149,147,247],[248,247,147],[25,23,180],[155,152,250],[62,250,152],[247,151,149],[153,154,249],[249,248,153],[62,152,58],[157,158,161],[159,157,160],[8,168,156],[158,8,156],[168,7,6],[6,156,168],[156,161,158],[161,160,157]];

module oxystele_decimated() {
	polyhedron(triangles = oxystele_decimated_faces(), points = oxystele_decimated_vertices());
}

module torus(torus_radius, section_radius)
{
    $fn = 10;
    if (removeHangingRing == 0)
    {
        // ensure that ring is at zero Z
        translate([0, 0, section_radius])
        {
	        rotate_extrude(convexity = 10)
	        translate([torus_radius, 0, 0])
	        circle(r = section_radius);
        }
    }
}

module warning()
{
    if ((sliceThickness <= 5 &&  slicePosition >= -49) || (sliceThickness <= 5 && slicePosition >= 82))
    {
        echo("STL may not render properly");
        echo("Please increase sliceThickness or move slicePosition for better results");
        warning_symbol();
    }
}

module warning_symbol()
{
    translate([0, 0, 55*shellScale])
    {
        color([255/255, 0, 0]) translate ([0, 40*shellScale, 5]) cylinder(20, 3, 7);
        color([255/255, 0, 0]) translate ([0, 40*shellScale, 0]) sphere(4);
    }
}

module main()
{
    // use entire shell
    if (shellOrSlice == 1)
    {
        color([0.65, 0.5, 0.4]) scale(shellScale*0.1)
        {
            if (earringOrNecklace == 1)
            {
                translate([moveRingLeftOrRight*10, moveRingForwardOrBackward*10, moveRingUpOrDown*10]) torus(realWorldScale(ringDiameter), realWorldScale(ringThickness));                
            }
            else
            {
                rotate([0, 90, 0]) translate([moveRingLeftOrRight*10, moveRingForwardOrBackward*10, moveRingUpOrDown*10]) torus(realWorldScale(ringDiameter), realWorldScale(ringThickness));
            }
            rotate(reposVector()) translate([-20, 0, 0]) oxystele_decimated();
        }
    }
    else
    {
        warning();
        // create slice
        color([0.65, 0.67, 0.72]) scale(shellScale*0.1)
        {
            union()
            {
                if (earringOrNecklace == 1)
                {
                    rotate([0, 0, 0]) translate([moveRingLeftOrRight*10, moveRingForwardOrBackward*10, moveRingUpOrDown*10]) torus(realWorldScale(ringDiameter), realWorldScale(ringThickness));                
                }
                else
                {
                    rotate([0, 90, 0]) translate([moveRingLeftOrRight*10, moveRingForwardOrBackward*10, moveRingUpOrDown*10]) torus(realWorldScale(ringDiameter), realWorldScale(ringThickness));
                }
                translate([-20, 0, -slicePosition+((sliceThickness*10)/2)])
                difference()
                {
                    rotate(reposVector()) translate([-20, 0, 0]) oxystele_decimated();
                    // scale slice thickness back to actual size
                    translate([-cube_side()/2, -slicingCubeOffsetY(), slicePosition+((sliceThickness*10)/2)]) cube([cube_side(), cube_side(), cube_side()]);
                    translate([-cube_side()/2, -slicingCubeOffsetY(), slicePosition+(-cube_side()-((sliceThickness*10)/2))]) cube([cube_side(), cube_side(), cube_side()]);
                }
            }
        }
    }
}

union()
{
    main();
}
// optionally show build plate
if (showBuildPlate == 1)
{
    build_plate(build_plate_selector,build_plate_manual_x,build_plate_manual_y);
}
