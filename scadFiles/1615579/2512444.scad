
// The 1st row of code
code1 = "1111";
// The 2nd row of code
code2 = "1010";
// The 3rd row of code
code3 = "0001";
// The 4th row of code
code4 = "0101";

module text_money(h) {
    scale([22/300.0,22/300.0,1]) {
        union() {
            linear_extrude(height=h) {
                polygon(
                    points = [
                        [0.000000,57.326160],
                        [24.748740,81.822360],
                        [50.760170,57.831230],
                        [45.709400,53.033010],
                        [24.748740,71.973370],
                        [3.535530,51.517780]
                    ],
                    paths = [
                        [ 0, 1, 2, 3, 4, 5 ]
                    ]
                );
           }
            linear_extrude(height=h) {
                polygon(
                    points = [
                        [10.859140,62.629460],
                        [40.406100,63.134530],
                        [40.658640,57.326160],
                        [10.859140,57.073620]
                    ],
                    paths = [
                        [ 0, 1, 2, 3 ]
                    ]
                );
           }
            linear_extrude(height=h) {
                polygon(
                    points = [
                        [20.203050,62.882000],
                        [30.557120,63.387070],
                        [30.557120,38.638330],
                        [42.931480,38.638330],
                        [42.173870,30.052040],
                        [30.304580,30.304580],
                        [31.062190,8.333760],
                        [20.203050,8.333760],
                        [19.445440,30.809650],
                        [8.586300,30.557110],
                        [8.586300,39.901020],
                        [19.697980,39.901020]
                    ],
                    paths = [
                        [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ]
                    ]
                );
           }
            linear_extrude(height=h) {
                polygon(
                    points = [
                        [2.272840,27.274120],
                        [10.354060,27.274120],
                        [9.848990,11.364220],
                        [39.648490,11.616750],
                        [39.901030,25.758890],
                        [48.487320,26.011430],
                        [48.992400,0.000000],
                        [3.030460,0.252540]
                    ],
                    paths = [
                        [ 0, 1, 2, 3, 4, 5, 6, 7 ]
                    ]
                );
           }
            linear_extrude(height=h) {
                polygon(
                    points = [
                        [65.912450,85.357890],
                        [71.468290,71.215750],
                        [90.408650,71.468290],
                        [91.418810,64.144690],
                        [73.741140,63.892150],
                        [76.771590,53.285550],
                        [91.166270,53.790620],
                        [91.671340,47.224630],
                        [77.276670,47.224630],
                        [80.812200,36.618030],
                        [90.408650,37.123110],
                        [91.166270,29.041890],
                        [82.579970,29.294430],
                        [87.883270,8.081220],
                        [100.005100,8.081220],
                        [99.752560,0.505080],
                        [83.337590,0.252540],
                        [76.771590,17.172590],
                        [63.387070,0.757610],
                        [58.083770,7.071070],
                        [75.003830,25.253810],
                        [74.751290,29.546960],
                        [50.507630,29.041890],
                        [49.750010,35.860410],
                        [71.215760,36.112950],
                        [69.447990,46.719550],
                        [51.265240,46.214480],
                        [51.265240,52.527930],
                        [66.922610,52.780470],
                        [63.134540,65.407380],
                        [50.507630,64.902300],
                        [50.255090,72.478440],
                        [61.366770,71.720830],
                        [58.083770,84.852810]
                    ],
                    paths = [
                        [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 ]
                    ]
                );
           }
            linear_extrude(height=h) {
                polygon(
                    points = [
                        [75.508900,86.620580],
                        [96.722110,86.115500],
                        [96.469570,78.034280],
                        [76.013980,77.781750]
                    ],
                    paths = [
                        [ 0, 1, 2, 3 ]
                    ]
                );
           }
        }
    }
}

module text_you(h) {
    scale([22/300.0,22/300.0,1]) {
        union() {
            linear_extrude(height=h) {
                polygon(
                    points = [
                        [0.000000,77.024130],
                        [80.054588,77.024130],
                        [81.064738,88.640880],
                        [92.934038,88.640880],
                        [92.934038,64.649760],
                        [0.000000,65.407370]
                    ],
                    paths = [
                        [ 0, 1, 2, 3, 4, 5 ]
                    ]
                );
           }
            linear_extrude(height=h) {
                polygon(
                    points = [
                        [35.102798,72.225900],
                        [36.618028,8.838830],
                        [48.487318,8.838830],
                        [47.224628,72.225900]
                    ],
                    paths = [
                        [ 0, 1, 2, 3 ]
                    ]
                );
           }
            linear_extrude(height=h) {
                polygon(
                    points = [
                        [62.376918,71.720830],
                        [63.134538,10.606600],
                        [74.246208,10.354060],
                        [74.246208,71.973370]
                    ],
                    paths = [
                        [ 0, 1, 2, 3 ]
                    ]
                );
           }
            linear_extrude(height=h) {
                polygon(
                    points = [
                        [12.121828,88.135810],
                        [13.384518,22.980970],
                        [41.416258,22.980970],
                        [41.416258,34.850260],
                        [22.980968,35.355340],
                        [22.475898,87.883270]
                    ],
                    paths = [
                        [ 0, 1, 2, 3, 4, 5 ]
                    ]
                );
           }
            linear_extrude(height=h) {
                polygon(
                    points = [
                        [43.689098,36.618030],
                        [52.780468,47.477170],
                        [92.681498,47.477170],
                        [92.934038,37.375640],
                        [65.154838,37.123100],
                        [54.800778,26.516500],
                        [44.446708,26.516500]
                    ],
                    paths = [
                        [ 0, 1, 2, 3, 4, 5, 6 ]
                    ]
                );
           }
            linear_extrude(height=h) {
                polygon(
                    points = [
                        [2.272843,15.152290],
                        [74.498748,14.899750],
                        [75.508898,1.010150],
                        [3.030458,1.262690]
                    ],
                    paths = [
                        [ 0, 1, 2, 3 ]
                    ]
                );
           }
            linear_extrude(height=h) {
                polygon(
                    points = [
                        [70.205598,29.294420],
                        [89.145958,29.294420],
                        [94.954338,25.001270],
                        [95.711948,15.404820],
                        [107.328708,9.596450],
                        [108.338858,0.000000],
                        [90.156118,0.252540],
                        [84.347738,7.576140],
                        [82.327428,20.455590],
                        [69.953068,20.708120]
                    ],
                    paths = [
                        [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
                    ]
                );
           }
        }
    }
}


baseHeight = 2.0;
trackHeight = 2.5;
totalHeight = 4.0;


module track() {

    difference() {

        cylinder(d=43, h=trackHeight, $fn=100);
        translate([-15.7/2,-43/2+3,baseHeight]) {
            cube([15.7, 43 , 5]);
        }
    }
}

module side() {
    union() {
        difference() {

            cylinder(d=43, h=totalHeight, $fn=100);
            translate([-19/2,-43/2,-1]) {
                cube([19, 43 , totalHeight+6]);
            }
            translate([0,0,-1]) {
                difference() {
                    cylinder(d=39, h=totalHeight+2, $fn=100);
                    translate([-22/2,-43/2,-2]) {
                        cube([22, 43 , totalHeight+3]);
                    }
                }
            }
            translate([-9,-19,0]) {
                rotate([0,0,45]) {
                    cube([3,3,totalHeight*3], center=true);
                }
            }
            translate([9,-19,0]) {
                rotate([0,0,45]) {
                    cube([3,3,totalHeight*3], center=true);
                }
            }        
            translate([-9,19,0]) {
                rotate([0,0,45]) {
                    cube([3,3,totalHeight*3], center=true);
                }
            }
            translate([9,19,0]) {
                rotate([0,0,45]) {
                    cube([3,3,totalHeight*3], center=true);
                }
            }        
        }
        translate([-10+(-19)/2,4,0]) {
            cube([10,1.5,totalHeight]);
        }
        translate([-10+(-19)/2,-4-1,0]) {
            cube([10,1.5,totalHeight]);
        }
        translate([19/2,4,0]) {
            cube([10,1.5,totalHeight]);
        }
        translate([19/2,-4-1,0]) {
            cube([10,1.5,totalHeight]);
        }
        translate([-18.5,-3,trackHeight-0.01]) {
            text_you(0.5+0.01);
        }        
        translate([11,-3,trackHeight-0.01]) {
            text_money(0.5+0.01);
        }

    }
}

module codebar1() {
    translate([0,-1,0]) {
        union() {
            cube([3.8,2,totalHeight-1]);
            translate([0,1,totalHeight-1]) {
                rotate([0,90,0]) {
                    cylinder(r=1, h=3.8, $fn=50);
                }
            }
        }
    }
}

module codebar(code) {
    union() {
        for(i=[0:3]) {
            if (code[i]=="1") {
                translate([-15.7/2+3.8*i+i*(15.7-3.8*4)/3.0,0,0]) {
                    codebar1();
                }
                if (i<3 && code[i+1]=="1") {
                    translate([-15.7/2+3.8*i+3.8/2+i*(15.7-3.8*4)/3.0,0,0]) {
                        codebar1();
                    }
                }
            }
        }
    }
}

module codebars(code1, code2, code3, code4) {
    codebar(code4);
    translate([0,6,0]) {
        codebar(code3);
    }
    translate([0,6*2,0]) {
        codebar(code2);
    }
    translate([0,6*3,0]) {
        codebar(code1);
    }
}

difference() {
    union() {
        track();
        side();
        codebars(str(code1),str(code2),str(code3),str(code4));
    }
    translate([0,0,-1.0]) {
        difference() {
            cylinder(d=38, h=0.5+1.0, $fn=100);
            translate([-5,21.5/2,-2]) {
                cube([10,43/2,2+2]);
            }
            translate([-5,(-43/2)-21.5/2,-2]) {
                cube([10,43/2,2+2]);
            }
        }
    }
    translate([-6.8/2,43/2-2.5-6.8,-1.0]) {
        cube([6.8,6.8,0.5+1.0]);
    }
    translate([-6.8/2,-43/2+2.5,-1.0]) {
        cube([6.8,6.8,0.5+1.0]);
    }    
}


